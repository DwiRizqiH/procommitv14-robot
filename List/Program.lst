
AVRASM ver. 2.1.30  d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm Wed Oct 23 15:16:36 2024

d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1083): warning: Register r4 already defined by the .DEF directive
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1084): warning: Register r5 already defined by the .DEF directive
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1085): warning: Register r6 already defined by the .DEF directive
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1086): warning: Register r7 already defined by the .DEF directive
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1087): warning: Register r8 already defined by the .DEF directive
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1088): warning: Register r9 already defined by the .DEF directive
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1089): warning: Register r10 already defined by the .DEF directive
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1090): warning: Register r11 already defined by the .DEF directive
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1091): warning: Register r12 already defined by the .DEF directive
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1092): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.40 Advanced
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 11.059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _hitung=R4
                 	.DEF _hitung_msb=R5
                 	.DEF _mulai=R6
                 	.DEF _mulai_msb=R7
                 	.DEF _nadc7=R8
                 	.DEF _nadc7_msb=R9
                 	.DEF _nilai_warna=R10
                 	.DEF _nilai_warna_msb=R11
                 	.DEF _lowM=R12
                 	.DEF _lowM_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00df 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 04e7 	JMP  _timer0_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 057e 	JMP  _timer0_comp_isr
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000033 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 0000
000035 0000      	.DB  0x0,0x0,0x0,0x0
000036 0000
000037 0000      	.DB  0x0,0x0,0x0,0x0
000038 00e3      	.DB  0xE3,0x0
                 
                 _0x6:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1140): warning: .cseg .db misalignment - padding zero byte
000039 00e4      	.DB  0xE4
                 _0x7:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1142): warning: .cseg .db misalignment - padding zero byte
00003a 00a3      	.DB  0xA3
                 _0x8:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1144): warning: .cseg .db misalignment - padding zero byte
00003b 00b9      	.DB  0xB9
                 _0x9:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1146): warning: .cseg .db misalignment - padding zero byte
00003c 00cf      	.DB  0xCF
                 _0xA:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1148): warning: .cseg .db misalignment - padding zero byte
00003d 00d0      	.DB  0xD0
                 _0xB:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1150): warning: .cseg .db misalignment - padding zero byte
00003e 00bc      	.DB  0xBC
                 _0xC:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1152): warning: .cseg .db misalignment - padding zero byte
00003f 00c7      	.DB  0xC7
                 _0xD:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1154): warning: .cseg .db misalignment - padding zero byte
000040 00e6      	.DB  0xE6
                 _0xE:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1156): warning: .cseg .db misalignment - padding zero byte
000041 00e6      	.DB  0xE6
                 _0xF:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1158): warning: .cseg .db misalignment - padding zero byte
000042 0001      	.DB  0x1
                 _0x0:
000043 4543
000044 204b
000045 4553
000046 534e      	.DB  0x43,0x45,0x4B,0x20,0x53,0x45,0x4E,0x53
000047 524f
000048 2020
000049 2500
00004a 2564      	.DB  0x4F,0x52,0x20,0x20,0x0,0x25,0x64,0x25
00004b 2564
00004c 2564
00004d 2564
00004e 2564      	.DB  0x64,0x25,0x64,0x25,0x64,0x25,0x64,0x25
00004f 2564
000050 0064
000051 6142
000052 6163      	.DB  0x64,0x25,0x64,0x0,0x42,0x61,0x63,0x61
000053 4c20
000054 6e69
000055 0065
000056 6573      	.DB  0x20,0x4C,0x69,0x6E,0x65,0x0,0x73,0x65
000057 736e
000058 726f
000059 253a
00005a 2064      	.DB  0x6E,0x73,0x6F,0x72,0x3A,0x25,0x64,0x20
00005b 203d
00005c 6425
00005d 2020
00005e 4200      	.DB  0x3D,0x20,0x25,0x64,0x20,0x20,0x0,0x42
00005f 6361
000060 2061
000061 6142
000062 6b63      	.DB  0x61,0x63,0x61,0x20,0x42,0x61,0x63,0x6B
000063 7267
000064 756f
000065 646e
000066 4300      	.DB  0x67,0x72,0x6F,0x75,0x6E,0x64,0x0,0x43
000067 6e65
000068 6574
000069 2072
00006a 6f50      	.DB  0x65,0x6E,0x74,0x65,0x72,0x20,0x50,0x6F
00006b 6e69
00006c 2074
00006d 2020
00006e 0020      	.DB  0x69,0x6E,0x74,0x20,0x20,0x20,0x20,0x0
00006f 6573
000070 736e
000071 726f
000072 253a      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x3A,0x25
000073 2064
000074 2d2d
000075 203e
000076 6425      	.DB  0x64,0x20,0x2D,0x2D,0x3E,0x20,0x25,0x64
000077 2020
000078 6400
000079 7461
00007a 2061      	.DB  0x20,0x20,0x0,0x64,0x61,0x74,0x61,0x20
00007b 656b
00007c 3d20
00007d 2520
00007e 2064      	.DB  0x6B,0x65,0x20,0x3D,0x20,0x25,0x64,0x20
00007f 7300
000080 6e65
000081 6973
000082 676e      	.DB  0x0,0x73,0x65,0x6E,0x73,0x69,0x6E,0x67
000083 3d20
000084 2520
000085 2064
000086 0020      	.DB  0x20,0x3D,0x20,0x25,0x64,0x20,0x20,0x0
000087 6425
000088 2020
000089 0020
00008a 554b      	.DB  0x25,0x64,0x20,0x20,0x20,0x0,0x4B,0x55
00008b 494e
00008c 474e
00008d 2020
00008e 0020      	.DB  0x4E,0x49,0x4E,0x47,0x20,0x20,0x20,0x0
00008f 4942
000090 5552
000091 2020
000092 2020      	.DB  0x42,0x49,0x52,0x55,0x20,0x20,0x20,0x20
000093 0020
000094 454d
000095 4152
000096 2048      	.DB  0x20,0x0,0x4D,0x45,0x52,0x41,0x48,0x20
000097 2020
000098 0020
000099 4948
00009a 414a      	.DB  0x20,0x20,0x20,0x0,0x48,0x49,0x4A,0x41
00009b 2055
00009c 2020
00009d 0020
00009e 4646      	.DB  0x55,0x20,0x20,0x20,0x20,0x0,0x46,0x46
00009f 4f20
0000a0 6c6e
0000a1 6e69
0000a2 5365      	.DB  0x20,0x4F,0x6E,0x6C,0x69,0x6E,0x65,0x53
0000a3 6f68
0000a4 0070
0000a5 6f52
0000a6 6f62      	.DB  0x68,0x6F,0x70,0x0,0x52,0x6F,0x62,0x6F
0000a7 2074
0000a8 5441
0000a9 654d
0000aa 6167      	.DB  0x74,0x20,0x41,0x54,0x4D,0x65,0x67,0x61
0000ab 3631
0000ac 0041
0000ad 756d
0000ae 616c      	.DB  0x31,0x36,0x41,0x0,0x6D,0x75,0x6C,0x61
0000af 2069
0000b0 6563
0000b1 206b
0000b2 6f70      	.DB  0x69,0x20,0x63,0x65,0x6B,0x20,0x70,0x6F
0000b3 6e69
0000b4 3a74
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1188): warning: .cseg .db misalignment - padding zero byte
0000b5 0000      	.DB  0x69,0x6E,0x74,0x3A,0x0
                 _0x2040060:
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1190): warning: .cseg .db misalignment - padding zero byte
0000b6 0001      	.DB  0x1
                 _0x2040000:
0000b7 4e2d
0000b8 4e41
0000b9 4900
0000ba 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
d:\Workspace\PROCOMMIT\PROCOMMITv14\List\Program.asm(1193): warning: .cseg .db misalignment - padding zero byte
0000bb 0000      	.DB  0x0
                 _0x2060003:
0000bc c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
0000bd 0001      	.DW  0x01
0000be 0002      	.DW  0x02
0000bf 0066      	.DW  __REG_BIT_VARS*2
                 
0000c0 000a      	.DW  0x0A
0000c1 0004      	.DW  0x04
0000c2 0068      	.DW  __REG_VARS*2
                 
0000c3 0001      	.DW  0x01
0000c4 0160      	.DW  _highM
0000c5 0072      	.DW  _0x6*2
                 
0000c6 0001      	.DW  0x01
0000c7 0162      	.DW  _lowK
0000c8 0074      	.DW  _0x7*2
                 
0000c9 0001      	.DW  0x01
0000ca 0164      	.DW  _highK
0000cb 0076      	.DW  _0x8*2
                 
0000cc 0001      	.DW  0x01
0000cd 0166      	.DW  _lowH
0000ce 0078      	.DW  _0x9*2
                 
0000cf 0001      	.DW  0x01
0000d0 0168      	.DW  _highH
0000d1 007a      	.DW  _0xA*2
                 
0000d2 0001      	.DW  0x01
0000d3 016a      	.DW  _lowB
0000d4 007c      	.DW  _0xB*2
                 
0000d5 0001      	.DW  0x01
0000d6 016c      	.DW  _highB
0000d7 007e      	.DW  _0xC*2
                 
0000d8 0001      	.DW  0x01
0000d9 01a0      	.DW  __seed_G102
0000da 016c      	.DW  _0x2040060*2
                 
0000db 0002      	.DW  0x02
0000dc 01a4      	.DW  __base_y_G103
0000dd 0178      	.DW  _0x2060003*2
                 
                 _0xFFFFFFFF:
0000de 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000df 94f8      	CLI
0000e0 27ee      	CLR  R30
0000e1 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000e2 e0f1      	LDI  R31,1
0000e3 bffb      	OUT  GICR,R31
0000e4 bfeb      	OUT  GICR,R30
0000e5 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0000e6 e1f8      	LDI  R31,0x18
0000e7 bdf1      	OUT  WDTCR,R31
0000e8 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000e9 e08d      	LDI  R24,(14-2)+1
0000ea e0a2      	LDI  R26,2
0000eb 27bb      	CLR  R27
                 __CLEAR_REG:
0000ec 93ed      	ST   X+,R30
0000ed 958a      	DEC  R24
0000ee f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000ef e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000f0 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000f1 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000f2 93ed      	ST   X+,R30
0000f3 9701      	SBIW R24,1
0000f4 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000f5 e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000f6 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000f7 9185      	LPM  R24,Z+
0000f8 9195      	LPM  R25,Z+
0000f9 9700      	SBIW R24,0
0000fa f061      	BREQ __GLOBAL_INI_END
0000fb 91a5      	LPM  R26,Z+
0000fc 91b5      	LPM  R27,Z+
0000fd 9005      	LPM  R0,Z+
0000fe 9015      	LPM  R1,Z+
0000ff 01bf      	MOVW R22,R30
000100 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000101 9005      	LPM  R0,Z+
000102 920d      	ST   X+,R0
000103 9701      	SBIW R24,1
000104 f7e1      	BRNE __GLOBAL_INI_LOOP
000105 01fb      	MOVW R30,R22
000106 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000107 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000108 bfed      	OUT  SPL,R30
000109 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00010a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00010b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00010c e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00010d 940c 057f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void scanX(int brpkali,int kec1);
                 ;void scan(int kec);
                 ;void konvert_logic();
                 ;void logika();
                 ;void cek_sensor();
                 ;void lcd_kedip(int ulangi);
                 ;void maju(unsigned char ki,unsigned char ka);
                 ;void mundur(unsigned char ki,unsigned char ka);
                 ;void kanan(unsigned char ki,unsigned char ka);
                 ;void kiri(unsigned char ki,unsigned char ka);
                 ;void scan_garis(int kec);
                 ;void scan_back(int kec);
                 ;void hit_tengah(int kec);
                 ;void scan2(int kec);
                 ;void belki(int ki, int ka);
                 ;void belki2(int ki, int ka);
                 ;void belka2(int ki, int ka);
                 ;void belka(int ki ,int ka);
                 ;void scanmundur(int ki ,int ka);
                 ;void scan7ki(int brpkali,int kec1);
                 ;void scan7ki2(int brpkali,int kec1);
                 ;void scan7ka(int brpkali,int kec1);
                 ;void scan7ka2(int brpkali,int kec1);
                 ;void scan0(int brpkali,int kec1);
                 ;void scan0rem(int kec1);
                 ;void parkir();
                 ;void maju_cari_garis(int brpkali,int kec1);
                 ;void ambil();
                 ;void siapambil();
                 ;void letakkan();
                 ;int bacawarna();
                 ;void rem(int nilai_rem);
                 ;void arah2();
                 ;void arahbawah();
                 ;void arah2new();
                 ;void copy();
                 ;void scantime(int waktu,int kec1);
                 ;void arahbawah2();
                 ;void buang();
                 ;void arah2hijau();
                 ;void arah2merah();
                 ;void arah2kuningkecil();
                    .equ __lcd_port=0x18 ;PORTB
                 ; 0000 005F #endasm
                 ;unsigned char read_adc(unsigned char adc_input)
                 ; 0000 0067 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0068 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
00010f 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000110 81e8      	LD   R30,Y
000111 66e0      	ORI  R30,LOW(0x60)
000112 b9e7      	OUT  0x7,R30
                 ; 0000 0069 // Start the AD conversion
                 ; 0000 006A ADCSRA|=0x40;
000113 9a36      	SBI  0x6,6
                 ; 0000 006B // Wait for the AD conversion to complete
                 ; 0000 006C while ((ADCSRA & 0x10)==0);
                 _0x3:
000114 9b34      	SBIS 0x6,4
000115 cffe      	RJMP _0x3
                 ; 0000 006D ADCSRA|=0x10;
000116 9a34      	SBI  0x6,4
                 ; 0000 006E return ADCH;
000117 b1e5      	IN   R30,0x5
000118 9621      	ADIW R28,1
000119 9508      	RET
                 ; 0000 006F }
                 ; .FEND
                 ;int hitung=0,mulai=0;
                 ;unsigned int nadc7=0,nilai_warna=0;
                 ;unsigned int lowM=  227;
                 ;unsigned int highM= 228;
                 
                 	.DSEG
                 ;unsigned int lowK= 163;
                 ;unsigned int highK=185;
                 ;unsigned int lowH=207;
                 ;unsigned int highH=208;
                 ;unsigned int lowB= 188;
                 ;unsigned int highB= 199;
                 ;char buff[33], hasilwarna;
                 ;int i,j,k,rka=0,rki=0;
                 ;bit x,kondisi;
                 ;unsigned char kecepatanki=230,kecepatanka=230;
                 ;unsigned char pos_servo1,pos_servo2,a,pos_led1,pos_led2;
                 ;char simpan;
                 ;int capit=0,angkat=0,_maju=0,_mundur=0;
                 ;char arr[16],irr[16];
                 ;int push=1;
                 ;eeprom int garis[10],back[10],tengah[10];
                 ;unsigned char sen[10],sensor;
                 ;void ambil()
                 ; 0000 008D {  capit_ambil;  delay_ms(500); bacawarna(); lengan_atas;    }
                 
                 	.CSEG
                 _ambil:
                 ; .FSTART _ambil
00011a eee9      	LDI  R30,LOW(233)
00011b 940e 09f2 	CALL SUBOPT_0x0
00011d d3eb      	RCALL _bacawarna
00011e eee2      	LDI  R30,LOW(226)
00011f 93e0 0193 	STS  _pos_servo2,R30
000121 9508      	RET
                 ; .FEND
                 ;void siapambil()
                 ; 0000 008F { capit_lepas; delay_ms(500); lengan_bawah; delay_ms(500);  }
                 ;void letakkan()   //248 226
                 ; 0000 0091 { //lengan_bawah;
                 ; 0000 0092 for(i=226;i<=248;i++){
                 ; 0000 0093 pos_servo2=i;
                 ; 0000 0094 delay_ms(25);
                 ; 0000 0095 
                 ; 0000 0096 }
                 ; 0000 0097 }
                 ;void buang()   //248 226
                 ; 0000 0099 { lengan_bawah;
                 _buang:
                 ; .FSTART _buang
000122 efe7      	LDI  R30,LOW(247)
000123 940e 09f8 	CALL SUBOPT_0x1
                 ; 0000 009A 
                 ; 0000 009B delay_ms(200);  capit_lepas;  delay_ms(500);  lengan_atas; delay_ms(200); capit_ ...
000125 efe3      	LDI  R30,LOW(243)
000126 940e 09f2 	CALL SUBOPT_0x0
000128 eee2      	LDI  R30,LOW(226)
000129 940e 09f8 	CALL SUBOPT_0x1
00012b eee9      	LDI  R30,LOW(233)
00012c 93e0 0192 	STS  _pos_servo1,R30
                 ; 0000 009C }
00012e 9508      	RET
                 ; .FEND
                 ;void arah2()
                 ; 0000 009F {
                 ; 0000 00A0 scanX(1,185);
                 ; 0000 00A1 rem(500);
                 ; 0000 00A2 ambil();
                 ; 0000 00A3 scan0(3,185);
                 ; 0000 00A4 scan0rem(170);
                 ; 0000 00A5 rem(100);
                 ; 0000 00A6 scanmundur(160,160);
                 ; 0000 00A7 rem(100);
                 ; 0000 00A8 belki2(170,170);
                 ; 0000 00A9 scan7ki2(3,200);
                 ; 0000 00AA rem(100);
                 ; 0000 00AB belka2(190,190);
                 ; 0000 00AC rem(100);
                 ; 0000 00AD buang();
                 ; 0000 00AE ambil();
                 ; 0000 00AF rem(100);
                 ; 0000 00B0 mundur(160,160);
                 ; 0000 00B1 delay_ms(100);
                 ; 0000 00B2 belka(160,160);
                 ; 0000 00B3 scan7ki2(1,200);
                 ; 0000 00B4 belka(160,160);
                 ; 0000 00B5 ///belka(170,170);
                 ; 0000 00B6 scanX(1,200);
                 ; 0000 00B7 //rem(500);
                 ; 0000 00B8 
                 ; 0000 00B9 scan0(2,190);
                 ; 0000 00BA //rem(100);
                 ; 0000 00BB 
                 ; 0000 00BC scanX(1,220);
                 ; 0000 00BD lcd_kedip(3);
                 ; 0000 00BE scan0rem(180);
                 ; 0000 00BF rem(100);
                 ; 0000 00C0 }
                 ;void arah2kuningkecil()
                 ; 0000 00C2 {
                 _arah2kuningkecil:
                 ; .FSTART _arah2kuningkecil
                 ; 0000 00C3 scanX(1,185);
00012f 940e 09fe 	CALL SUBOPT_0x2
000131 940e 0a03 	CALL SUBOPT_0x3
                 ; 0000 00C4 rem(500);
000133 efa4      	LDI  R26,LOW(500)
000134 e0b1      	LDI  R27,HIGH(500)
000135 d04b      	RCALL _rem
                 ; 0000 00C5 ambil();
000136 dfe3      	RCALL _ambil
                 ; 0000 00C6 scan0(3,185);
000137 940e 0a07 	CALL SUBOPT_0x4
000139 eba9      	LDI  R26,LOW(185)
00013a 940e 0a0c 	CALL SUBOPT_0x5
                 ; 0000 00C7 scan0rem(170);
                 ; 0000 00C8 rem(100);
                 ; 0000 00C9 scanmundur(160,160);
                 ; 0000 00CA rem(100);
                 ; 0000 00CB belki2(170,170);
00013c 940e 0a23 	CALL SUBOPT_0x6
00013e d186      	RCALL _belki2
                 ; 0000 00CC scan7ki2(3,200);
00013f 940e 0a07 	CALL SUBOPT_0x4
000141 940e 0a2a 	CALL SUBOPT_0x7
                 ; 0000 00CD rem(100);
000143 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 00CE belka2(190,190);
000145 940e 0a32 	CALL SUBOPT_0x9
000147 d191      	RCALL _belka2
                 ; 0000 00CF rem(100);
000148 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 00D0 buang();
00014a dfd7      	RCALL _buang
                 ; 0000 00D1 rem(100);
00014b 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 00D2 mundur(160,160);
00014d 940e 0a39 	CALL SUBOPT_0xA
                 ; 0000 00D3 delay_ms(100);
                 ; 0000 00D4 belka(160,160);
00014f 940e 0a42 	CALL SUBOPT_0xB
                 ; 0000 00D5 scan7ki2(1,200);
000151 940e 09fe 	CALL SUBOPT_0x2
000153 940e 0a2a 	CALL SUBOPT_0x7
                 ; 0000 00D6 belka(160,160);
000155 940e 0a42 	CALL SUBOPT_0xB
                 ; 0000 00D7 ///belka(170,170);
                 ; 0000 00D8 scanX(1,200);
000157 c1f4      	RJMP _0x20C0007
                 ; 0000 00D9 //rem(500);
                 ; 0000 00DA 
                 ; 0000 00DB scan0(2,190);
                 ; 0000 00DC //rem(100);
                 ; 0000 00DD 
                 ; 0000 00DE scanX(1,220);
                 ; 0000 00DF lcd_kedip(3);
                 ; 0000 00E0 scan0rem(180);
                 ; 0000 00E1 rem(100);
                 ; 0000 00E2 }
                 ; .FEND
                 ;void copy()
                 ; 0000 00E4 {   belka(170,170);
                 ; 0000 00E5 scan7ki2(3,170);
                 ; 0000 00E6 }
                 ;void arah2new()
                 ; 0000 00E8 {
                 _arah2new:
                 ; .FSTART _arah2new
                 ; 0000 00E9 scanX(1,185);
000158 940e 09fe 	CALL SUBOPT_0x2
00015a 940e 0a03 	CALL SUBOPT_0x3
                 ; 0000 00EA rem(100);
00015c 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 00EB //ambil();
                 ; 0000 00EC scan0(3,190);
00015e 940e 0a07 	CALL SUBOPT_0x4
000160 ebae      	LDI  R26,LOW(190)
000161 940e 0a0c 	CALL SUBOPT_0x5
                 ; 0000 00ED scan0rem(170);
                 ; 0000 00EE rem(100);
                 ; 0000 00EF scanmundur(160,160);
                 ; 0000 00F0 rem(100);
                 ; 0000 00F1 buang();
000163 dfbe      	RCALL _buang
                 ; 0000 00F2 belka2(160,160);
000164 940e 0a4a 	CALL SUBOPT_0xC
                 ; 0000 00F3 belka2(160,160);
000166 940e 0a4a 	CALL SUBOPT_0xC
                 ; 0000 00F4 ///belka(170,170);
                 ; 0000 00F5 scanX(1,200);
000168 c1e3      	RJMP _0x20C0007
                 ; 0000 00F6 //rem(500);
                 ; 0000 00F7 
                 ; 0000 00F8 scan0(2,190);
                 ; 0000 00F9 //rem(100);
                 ; 0000 00FA 
                 ; 0000 00FB scanX(1,220);
                 ; 0000 00FC lcd_kedip(3);
                 ; 0000 00FD scan0rem(180);
                 ; 0000 00FE rem(100);
                 ; 0000 00FF }
                 ; .FEND
                 ;void arahbawah()
                 ; 0000 0103 {
                 ; 0000 0104 ///belka(170,170);
                 ; 0000 0105 scanX(1,200);
                 ; 0000 0106 //rem(500);
                 ; 0000 0107 
                 ; 0000 0108 scan0(2,190);
                 ; 0000 0109 //rem(100);
                 ; 0000 010A 
                 ; 0000 010B scanX(1,220);
                 ; 0000 010C lcd_kedip(3);
                 ; 0000 010D scan0rem(180);
                 ; 0000 010E rem(100);
                 ; 0000 010F }
                 ;void arahbawah2()
                 ; 0000 0111 {
                 ; 0000 0112 belki(170,170);
                 ; 0000 0113 scanX(1,200);
                 ; 0000 0114 lcd_kedip(2);
                 ; 0000 0115 rem(500);
                 ; 0000 0116 scan0(2,200);
                 ; 0000 0117 rem(100);
                 ; 0000 0118 
                 ; 0000 0119 scan0rem(180);
                 ; 0000 011A }
                 ;void scanX(int brpkali,int kec1)
                 ; 0000 011C {      cek_sensor();
                 _scanX:
                 ; .FSTART _scanX
000169 940e 0a52 	CALL SUBOPT_0xD
                 ;	brpkali -> Y+2
                 ;	kec1 -> Y+0
                 ; 0000 011D while (hitung<brpkali) {
                 _0x13:
00016b 940e 0a56 	CALL SUBOPT_0xE
00016d f494      	BRGE _0x15
                 ; 0000 011E while ((sensor & 0b00011100)!=0b00011100)
                 _0x16:
00016e 940e 0a5b 	CALL SUBOPT_0xF
000170 f019      	BREQ _0x18
                 ; 0000 011F {cek_sensor();
000171 940e 0a60 	CALL SUBOPT_0x10
                 ; 0000 0120 scan(kec1);
                 ; 0000 0121 }
000173 cffa      	RJMP _0x16
                 _0x18:
                 ; 0000 0122 
                 ; 0000 0123 while ((sensor & 0b00011100)==0b00011100)
                 _0x19:
000174 940e 0a5b 	CALL SUBOPT_0xF
000176 f441      	BRNE _0x1B
                 ; 0000 0124 {    cek_sensor();
000177 940e 0a66 	CALL SUBOPT_0x11
                 ; 0000 0125 lampu=0;
                 ; 0000 0126 
                 ; 0000 0127 scan(kec1);
                 ; 0000 0128 if ((sensor & 0b00011100)!=0b00011100) {
000179 940e 0a5b 	CALL SUBOPT_0xF
00017b f011      	BREQ _0x1E
                 ; 0000 0129 hitung++;
00017c 940e 0a6d 	CALL SUBOPT_0x12
                 ; 0000 012A lampu=1;
                 ; 0000 012B };
                 _0x1E:
                 ; 0000 012C }
00017e cff5      	RJMP _0x19
                 _0x1B:
                 ; 0000 012D }
00017f cfeb      	RJMP _0x13
                 _0x15:
                 ; 0000 012E hitung=0;
000180 c35e      	RJMP _0x20C0005
                 ; 0000 012F 
                 ; 0000 0130 }
                 ; .FEND
                 ;void rem(int nilai_rem)
                 ; 0000 0133 {
                 _rem:
                 ; .FSTART _rem
                 ; 0000 0134 PORTD.4=1;
000181 93ba      	ST   -Y,R27
000182 93aa      	ST   -Y,R26
                 ;	nilai_rem -> Y+0
000183 9a94      	SBI  0x12,4
                 ; 0000 0135 PORTD.5=1;
000184 9a95      	SBI  0x12,5
                 ; 0000 0136 PORTD.2=0;
000185 9892      	CBI  0x12,2
                 ; 0000 0137 PORTD.3=0;
000186 9893      	CBI  0x12,3
                 ; 0000 0138 PORTD.6=0;
000187 9896      	CBI  0x12,6
                 ; 0000 0139 PORTD.7=0;
000188 9897      	CBI  0x12,7
                 ; 0000 013A delay_ms(nilai_rem);
000189 940e 0a73 	CALL SUBOPT_0x13
                 ; 0000 013B }
00018b c12e      	RJMP _0x20C0008
                 ; .FEND
                 ;void konvert_logic()
                 ; 0000 013E { for(i=0;i<7;i++)
                 _konvert_logic:
                 ; .FSTART _konvert_logic
00018c 940e 0a77 	CALL SUBOPT_0x14
                 _0x2E:
00018e 940e 0a7d 	CALL SUBOPT_0x15
000190 9717      	SBIW R26,7
000191 f4ac      	BRGE _0x2F
                 ; 0000 013F { if(read_adc(i)>tengah[i]) { sen[i]=1; }
000192 940e 0a82 	CALL SUBOPT_0x16
000194 17ea      	CP   R30,R26
000195 07fb      	CPC  R31,R27
000196 f424      	BRGE _0x30
000197 940e 0a96 	CALL SUBOPT_0x17
000199 e0a1      	LDI  R26,LOW(1)
00019a c008      	RJMP _0x198
                 ; 0000 0140 else if(read_adc(i)<tengah[i]){sen[i]=0;}
                 _0x30:
00019b 940e 0a82 	CALL SUBOPT_0x16
00019d 17ae      	CP   R26,R30
00019e 07bf      	CPC  R27,R31
00019f f424      	BRGE _0x32
0001a0 940e 0a96 	CALL SUBOPT_0x17
0001a2 e0a0      	LDI  R26,LOW(0)
                 _0x198:
0001a3 83a0      	STD  Z+0,R26
                 ; 0000 0141 }
                 _0x32:
0001a4 940e 0a9d 	CALL SUBOPT_0x18
0001a6 cfe7      	RJMP _0x2E
                 _0x2F:
                 ; 0000 0142 }
0001a7 9508      	RET
                 ; .FEND
                 ;void logika()
                 ; 0000 0144 {   sensor=(sen[6]*64)+(sen[5]*32)+(sen[4]*16)+(sen[3]*8)+(sen[2]*4)+(sen[1]*2)+ ...
                 _logika:
                 ; .FSTART _logika
                +
0001a8 91e0 019b+LDS R30 , _sen + ( 6 )
                 	__GETB1MN _sen,6
0001aa e4a0      	LDI  R26,LOW(64)
0001ab 02ea      	MULS R30,R26
0001ac 2d60      	MOV  R22,R0
                +
0001ad 91e0 019a+LDS R30 , _sen + ( 5 )
                 	__GETB1MN _sen,5
0001af e2a0      	LDI  R26,LOW(32)
0001b0 02ea      	MULS R30,R26
0001b1 01f0      	MOVW R30,R0
0001b2 0f6e      	ADD  R22,R30
                +
0001b3 91e0 0199+LDS R30 , _sen + ( 4 )
                 	__GETB1MN _sen,4
0001b5 e1a0      	LDI  R26,LOW(16)
0001b6 02ea      	MULS R30,R26
0001b7 01f0      	MOVW R30,R0
0001b8 2fa6      	MOV  R26,R22
0001b9 0fae      	ADD  R26,R30
                +
0001ba 91e0 0198+LDS R30 , _sen + ( 3 )
                 	__GETB1MN _sen,3
0001bc 0fee      	LSL  R30
0001bd 0fee      	LSL  R30
0001be 0fee      	LSL  R30
0001bf 0fae      	ADD  R26,R30
                +
0001c0 91e0 0197+LDS R30 , _sen + ( 2 )
                 	__GETB1MN _sen,2
0001c2 0fee      	LSL  R30
0001c3 0fee      	LSL  R30
0001c4 0fae      	ADD  R26,R30
                +
0001c5 91e0 0196+LDS R30 , _sen + ( 1 )
                 	__GETB1MN _sen,1
0001c7 0fee      	LSL  R30
0001c8 0fea      	ADD  R30,R26
0001c9 91a0 0195 	LDS  R26,_sen
0001cb 0fea      	ADD  R30,R26
0001cc 93e0 019f 	STS  _sensor,R30
                 ; 0000 0145 }
0001ce 9508      	RET
                 ; .FEND
                 ;void cek_sensor()
                 ; 0000 0147 {   konvert_logic();
                 _cek_sensor:
                 ; .FSTART _cek_sensor
0001cf dfbc      	RCALL _konvert_logic
                 ; 0000 0148 logika();
0001d0 dfd7      	RCALL _logika
                 ; 0000 0149 lcd_gotoxy(0,0);
0001d1 940e 0aa5 	CALL SUBOPT_0x19
                 ; 0000 014A lcd_putsf("CEK SENSOR  ");
                +
0001d3 e8a6     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0001d4 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0001d5 940e 0aaa 	CALL SUBOPT_0x1A
                 ; 0000 014B lcd_gotoxy(0,1);
                 ; 0000 014C sprintf(buff,"%d%d%d%d%d%d%d",sen[0],sen[1],sen[2],sen[3],sen[4],sen[5],sen[6]);
                +
0001d7 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
0001d8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
0001d9 93fa      	ST   -Y,R31
0001da 93ea      	ST   -Y,R30
0001db 91e0 0195 	LDS  R30,_sen
0001dd 940e 0ab6 	CALL SUBOPT_0x1B
                +
0001df 91e0 0196+LDS R30 , _sen + ( 1 )
                 	__GETB1MN _sen,1
0001e1 940e 0ab6 	CALL SUBOPT_0x1B
                +
0001e3 91e0 0197+LDS R30 , _sen + ( 2 )
                 	__GETB1MN _sen,2
0001e5 940e 0ab6 	CALL SUBOPT_0x1B
                +
0001e7 91e0 0198+LDS R30 , _sen + ( 3 )
                 	__GETB1MN _sen,3
0001e9 940e 0ab6 	CALL SUBOPT_0x1B
                +
0001eb 91e0 0199+LDS R30 , _sen + ( 4 )
                 	__GETB1MN _sen,4
0001ed 940e 0ab6 	CALL SUBOPT_0x1B
                +
0001ef 91e0 019a+LDS R30 , _sen + ( 5 )
                 	__GETB1MN _sen,5
0001f1 940e 0ab6 	CALL SUBOPT_0x1B
                +
0001f3 91e0 019b+LDS R30 , _sen + ( 6 )
                 	__GETB1MN _sen,6
0001f5 940e 0ab6 	CALL SUBOPT_0x1B
0001f7 e18c      	LDI  R24,28
0001f8 940e 08a6 	CALL _sprintf
0001fa 96a0      	ADIW R28,32
                 ; 0000 014D lcd_puts(buff);
0001fb 940e 0abc 	CALL SUBOPT_0x1C
                 ; 0000 014E }
0001fd 9508      	RET
                 ; .FEND
                 ;void lcd_kedip(int ulangi)
                 ; 0000 0151 {  for(i=0;i<ulangi;i++)
                 _lcd_kedip:
                 ; .FSTART _lcd_kedip
0001fe 940e 0ac0 	CALL SUBOPT_0x1D
                 ;	ulangi -> Y+0
                 _0x34:
000200 81e8      	LD   R30,Y
000201 81f9      	LDD  R31,Y+1
000202 940e 0a7d 	CALL SUBOPT_0x15
000204 17ae      	CP   R26,R30
000205 07bf      	CPC  R27,R31
000206 f44c      	BRGE _0x35
                 ; 0000 0152 {
                 ; 0000 0153 lampu=0;
000207 98c3      	CBI  0x18,3
                 ; 0000 0154 delay_ms(100);
000208 940e 0ac3 	CALL SUBOPT_0x1E
                 ; 0000 0155 lampu=1;
00020a 9ac3      	SBI  0x18,3
                 ; 0000 0156 delay_ms(100);
00020b 940e 0ac3 	CALL SUBOPT_0x1E
                 ; 0000 0157 }
00020d 940e 0a9d 	CALL SUBOPT_0x18
00020f cff0      	RJMP _0x34
                 _0x35:
                 ; 0000 0158 }
000210 c0a9      	RJMP _0x20C0008
                 ; .FEND
                 ;void maju(unsigned char ki,unsigned char ka)
                 ; 0000 015A {
                 _maju:
                 ; .FSTART _maju
                 ; 0000 015B pwmka=ka;
000211 940e 0ac7 	CALL SUBOPT_0x1F
                 ;	ki -> Y+1
                 ;	ka -> Y+0
                 ; 0000 015C pwmki=ki;
                 ; 0000 015D 
                 ; 0000 015E //dir kiri
                 ; 0000 015F PORTD.2=1;
000213 9a92      	SBI  0x12,2
                 ; 0000 0160 PORTD.3=0;
000214 9893      	CBI  0x12,3
                 ; 0000 0161 
                 ; 0000 0162 //dir kanan
                 ; 0000 0163 PORTD.6=0;
000215 9896      	CBI  0x12,6
                 ; 0000 0164 PORTD.7=1;
000216 9a97      	SBI  0x12,7
                 ; 0000 0165 }
000217 c0a2      	RJMP _0x20C0008
                 ; .FEND
                 ;void mundur(unsigned char ki,unsigned char ka)
                 ; 0000 0168 {
                 _mundur:
                 ; .FSTART _mundur
                 ; 0000 0169 pwmka=ka;
000218 940e 0ac7 	CALL SUBOPT_0x1F
                 ;	ki -> Y+1
                 ;	ka -> Y+0
                 ; 0000 016A pwmki=ki;
                 ; 0000 016B 
                 ; 0000 016C //dir kiri
                 ; 0000 016D PORTD.2=0;
00021a 9892      	CBI  0x12,2
                 ; 0000 016E PORTD.3=1;
00021b 9a93      	SBI  0x12,3
                 ; 0000 016F 
                 ; 0000 0170 //dir kanan
                 ; 0000 0171 PORTD.6=1;
00021c 9a96      	SBI  0x12,6
                 ; 0000 0172 PORTD.7=0;
00021d 9897      	CBI  0x12,7
                 ; 0000 0173 }
00021e c09b      	RJMP _0x20C0008
                 ; .FEND
                 ;void kanan(unsigned char ki,unsigned char ka)
                 ; 0000 0176 {
                 _kanan:
                 ; .FSTART _kanan
                 ; 0000 0177 pwmka=ka;
00021f 940e 0ac7 	CALL SUBOPT_0x1F
                 ;	ki -> Y+1
                 ;	ka -> Y+0
                 ; 0000 0178 pwmki=ki;
                 ; 0000 0179 
                 ; 0000 017A //dir kiri
                 ; 0000 017B PORTD.2=0;
000221 9892      	CBI  0x12,2
                 ; 0000 017C PORTD.3=1;
000222 9a93      	SBI  0x12,3
                 ; 0000 017D 
                 ; 0000 017E //dir kanan
                 ; 0000 017F PORTD.6=0;
000223 9896      	CBI  0x12,6
                 ; 0000 0180 PORTD.7=1;
000224 9a97      	SBI  0x12,7
                 ; 0000 0181 }
000225 c094      	RJMP _0x20C0008
                 ; .FEND
                 ;void kiri(unsigned char ki,unsigned char ka)
                 ; 0000 0184 {
                 _kiri:
                 ; .FSTART _kiri
                 ; 0000 0185 pwmka=ka;
000226 940e 0ac7 	CALL SUBOPT_0x1F
                 ;	ki -> Y+1
                 ;	ka -> Y+0
                 ; 0000 0186 pwmki=ki;
                 ; 0000 0187 
                 ; 0000 0188 //dir kiri
                 ; 0000 0189 PORTD.2=1;
000228 9a92      	SBI  0x12,2
                 ; 0000 018A PORTD.3=0;
000229 9893      	CBI  0x12,3
                 ; 0000 018B 
                 ; 0000 018C //dir kanan
                 ; 0000 018D PORTD.6=1;
00022a 9a96      	SBI  0x12,6
                 ; 0000 018E PORTD.7=0;
00022b 9897      	CBI  0x12,7
                 ; 0000 018F }
00022c c08d      	RJMP _0x20C0008
                 ; .FEND
                 ;void scan_garis(int kec)
                 ; 0000 0191 {
                 _scan_garis:
                 ; .FSTART _scan_garis
                 ; 0000 0192 for(i=0;i<7;i++)
00022d 940e 0ac0 	CALL SUBOPT_0x1D
                 ;	kec -> Y+0
                 _0x5B:
00022f 940e 0a7d 	CALL SUBOPT_0x15
000231 9717      	SBIW R26,7
000232 f50c      	BRGE _0x5C
                 ; 0000 0193 {
                 ; 0000 0194 garis[i]=read_adc(i);
000233 940e 0ad1 	CALL SUBOPT_0x20
000235 940e 0ad6 	CALL SUBOPT_0x21
000237 0fea      	ADD  R30,R26
000238 1ffb      	ADC  R31,R27
000239 93ff      	PUSH R31
00023a 93ef      	PUSH R30
00023b 91a0 0190 	LDS  R26,_i
00023d ded1      	RCALL _read_adc
00023e 91af      	POP  R26
00023f 91bf      	POP  R27
000240 e0f0      	LDI  R31,0
000241 940e 0adb 	CALL SUBOPT_0x22
                 ; 0000 0195 lcd_gotoxy(0,0);
                 ; 0000 0196 lcd_putsf("Baca Line");
                +
000243 eaa2     +LDI R26 , LOW ( 2 * _0x0 + ( 28 ) )
000244 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW2FN _0x0,28
000245 940e 0aaa 	CALL SUBOPT_0x1A
                 ; 0000 0197 lcd_gotoxy(0,1);
                 ; 0000 0198 sprintf(buff,"sensor:%d = %d  ",i,garis[i]);
000247 940e 0ade 	CALL SUBOPT_0x23
000249 940e 0ad6 	CALL SUBOPT_0x21
00024b 940e 0ae8 	CALL SUBOPT_0x24
                 ; 0000 0199 lcd_puts(buff);
                 ; 0000 019A lampu=0;
00024d 98c3      	CBI  0x18,3
                 ; 0000 019B delay_ms(kec);
00024e 940e 0a73 	CALL SUBOPT_0x13
                 ; 0000 019C lampu=1;
000250 9ac3      	SBI  0x18,3
                 ; 0000 019D 
                 ; 0000 019E }
000251 940e 0a9d 	CALL SUBOPT_0x18
000253 cfdb      	RJMP _0x5B
                 _0x5C:
                 ; 0000 019F }
000254 c065      	RJMP _0x20C0008
                 ; .FEND
                 ;void scan_back(int kec)
                 ; 0000 01A2 {
                 _scan_back:
                 ; .FSTART _scan_back
                 ; 0000 01A3 for(i=0;i<7;i++)
000255 940e 0ac0 	CALL SUBOPT_0x1D
                 ;	kec -> Y+0
                 _0x62:
000257 940e 0a7d 	CALL SUBOPT_0x15
000259 9717      	SBIW R26,7
00025a f50c      	BRGE _0x63
                 ; 0000 01A4 {
                 ; 0000 01A5 back[i]=read_adc(i);
00025b 940e 0af5 	CALL SUBOPT_0x25
00025d 0fea      	ADD  R30,R26
00025e 1ffb      	ADC  R31,R27
00025f 93ff      	PUSH R31
000260 93ef      	PUSH R30
000261 91a0 0190 	LDS  R26,_i
000263 deab      	RCALL _read_adc
000264 91af      	POP  R26
000265 91bf      	POP  R27
000266 e0f0      	LDI  R31,0
000267 940e 0adb 	CALL SUBOPT_0x22
                 ; 0000 01A6 lcd_gotoxy(0,0);
                 ; 0000 01A7 lcd_putsf("Baca Background");
                +
000269 ebad     +LDI R26 , LOW ( 2 * _0x0 + ( 55 ) )
00026a e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 55 ) )
                 	__POINTW2FN _0x0,55
00026b 940e 0aaa 	CALL SUBOPT_0x1A
                 ; 0000 01A8 lcd_gotoxy(0,1);
                 ; 0000 01A9 sprintf(buff,"sensor:%d = %d  ",i,back[i]);
00026d 940e 0ade 	CALL SUBOPT_0x23
00026f e1a4      	LDI  R26,LOW(_back)
000270 e0b0      	LDI  R27,HIGH(_back)
000271 0fee      	LSL  R30
000272 1fff      	ROL  R31
000273 940e 0ae8 	CALL SUBOPT_0x24
                 ; 0000 01AA lcd_puts(buff);
                 ; 0000 01AB lampu=0;
000275 98c3      	CBI  0x18,3
                 ; 0000 01AC delay_ms(kec);
000276 940e 0a73 	CALL SUBOPT_0x13
                 ; 0000 01AD lampu=1;
000278 9ac3      	SBI  0x18,3
                 ; 0000 01AE 
                 ; 0000 01AF }
000279 940e 0a9d 	CALL SUBOPT_0x18
00027b cfdb      	RJMP _0x62
                 _0x63:
                 ; 0000 01B0 }
00027c c03d      	RJMP _0x20C0008
                 ; .FEND
                 ;void hit_tengah(int kec)
                 ; 0000 01B4 {
                 _hit_tengah:
                 ; .FSTART _hit_tengah
                 ; 0000 01B5 for(i=0;i<7;i++)
00027d 940e 0ac0 	CALL SUBOPT_0x1D
                 ;	kec -> Y+0
                 _0x69:
00027f 940e 0a7d 	CALL SUBOPT_0x15
000281 9717      	SBIW R26,7
000282 f5bc      	BRGE _0x6A
                 ; 0000 01B6 {
                 ; 0000 01B7 tengah[i]=(back[i]+garis[i])/2;
000283 940e 0afb 	CALL SUBOPT_0x26
000285 0fea      	ADD  R30,R26
000286 1ffb      	ADC  R31,R27
000287 01bf      	MOVW R22,R30
000288 940e 0af5 	CALL SUBOPT_0x25
00028a 0fae      	ADD  R26,R30
00028b 1fbf      	ADC  R27,R31
00028c 940e 0bff 	CALL __EEPROMRDW
00028e 010f      	MOVW R0,R30
00028f 940e 0ad1 	CALL SUBOPT_0x20
000291 940e 0ad6 	CALL SUBOPT_0x21
000293 0fae      	ADD  R26,R30
000294 1fbf      	ADC  R27,R31
000295 940e 0bff 	CALL __EEPROMRDW
000297 01d0      	MOVW R26,R0
000298 0fae      	ADD  R26,R30
000299 1fbf      	ADC  R27,R31
00029a e0e2      	LDI  R30,LOW(2)
00029b e0f0      	LDI  R31,HIGH(2)
00029c 940e 0bdf 	CALL __DIVW21
00029e 01db      	MOVW R26,R22
00029f 940e 0adb 	CALL SUBOPT_0x22
                 ; 0000 01B8 lcd_gotoxy(0,0);
                 ; 0000 01B9 lcd_putsf("Center Point    ");
                +
0002a1 ecad     +LDI R26 , LOW ( 2 * _0x0 + ( 71 ) )
0002a2 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 71 ) )
                 	__POINTW2FN _0x0,71
0002a3 940e 0aaa 	CALL SUBOPT_0x1A
                 ; 0000 01BA lcd_gotoxy(0,1);
                 ; 0000 01BB sprintf(buff,"sensor:%d --> %d  ",i,tengah[i]);
                +
0002a5 edee     +LDI R30 , LOW ( 2 * _0x0 + ( 88 ) )
0002a6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 88 ) )
                 	__POINTW1FN _0x0,88
0002a7 93fa      	ST   -Y,R31
0002a8 93ea      	ST   -Y,R30
0002a9 940e 0ad1 	CALL SUBOPT_0x20
0002ab 940e 0bc7 	CALL __CWD1
0002ad 940e 0bfa 	CALL __PUTPARD1
0002af 940e 0afb 	CALL SUBOPT_0x26
0002b1 940e 0ae8 	CALL SUBOPT_0x24
                 ; 0000 01BC lcd_puts(buff);
                 ; 0000 01BD lampu=0;
0002b3 98c3      	CBI  0x18,3
                 ; 0000 01BE delay_ms(kec);
0002b4 940e 0a73 	CALL SUBOPT_0x13
                 ; 0000 01BF lampu=1;
0002b6 9ac3      	SBI  0x18,3
                 ; 0000 01C0 }
0002b7 940e 0a9d 	CALL SUBOPT_0x18
0002b9 cfc5      	RJMP _0x69
                 _0x6A:
                 ; 0000 01C1 }
                 _0x20C0008:
0002ba 9622      	ADIW R28,2
0002bb 9508      	RET
                 ; .FEND
                 ;void belki(int ki, int ka)
                 ; 0000 01C4 {  cek_sensor();
                 _belki:
                 ; .FSTART _belki
0002bc 940e 0a52 	CALL SUBOPT_0xD
                 ;	ki -> Y+2
                 ;	ka -> Y+0
                 ; 0000 01C5 while ((sensor & 0b0000001)!=0b0000001)
                 _0x6F:
0002be 940e 0b01 	CALL SUBOPT_0x27
0002c0 f019      	BREQ _0x71
                 ; 0000 01C6 {cek_sensor();
0002c1 940e 0b06 	CALL SUBOPT_0x28
                 ; 0000 01C7 kiri(ki,ka);
                 ; 0000 01C8 }
0002c3 cffa      	RJMP _0x6F
                 _0x71:
                 ; 0000 01C9 
                 ; 0000 01CA }
0002c4 c21c      	RJMP _0x20C0006
                 ; .FEND
                 ;void belki2(int ki, int ka)
                 ; 0000 01CC {
                 _belki2:
                 ; .FSTART _belki2
                 ; 0000 01CD cek_sensor();
0002c5 940e 0a52 	CALL SUBOPT_0xD
                 ;	ki -> Y+2
                 ;	ka -> Y+0
                 ; 0000 01CE while ((sensor & 0b0000001)!=0b0000001)
                 _0x72:
0002c7 940e 0b01 	CALL SUBOPT_0x27
0002c9 f019      	BREQ _0x74
                 ; 0000 01CF {cek_sensor();
0002ca 940e 0b06 	CALL SUBOPT_0x28
                 ; 0000 01D0 kiri(ki,ka);
                 ; 0000 01D1 }
0002cc cffa      	RJMP _0x72
                 _0x74:
                 ; 0000 01D2 while ((sensor & 0b0000001)==0b0000001)
                 _0x75:
0002cd 940e 0b01 	CALL SUBOPT_0x27
0002cf f419      	BRNE _0x77
                 ; 0000 01D3 {cek_sensor();
0002d0 940e 0b06 	CALL SUBOPT_0x28
                 ; 0000 01D4 kiri(ki,ka);
                 ; 0000 01D5 }
0002d2 cffa      	RJMP _0x75
                 _0x77:
                 ; 0000 01D6 rem(100);
0002d3 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 01D7 lcd_kedip(5);
0002d5 e0a5      	LDI  R26,LOW(5)
0002d6 e0b0      	LDI  R27,0
0002d7 df26      	RCALL _lcd_kedip
                 ; 0000 01D8 }
0002d8 c208      	RJMP _0x20C0006
                 ; .FEND
                 ;void belka2(int ki, int ka)
                 ; 0000 01DA {
                 _belka2:
                 ; .FSTART _belka2
                 ; 0000 01DB cek_sensor();
0002d9 940e 0a52 	CALL SUBOPT_0xD
                 ;	ki -> Y+2
                 ;	ka -> Y+0
                 ; 0000 01DC while ((sensor & 0b01000000)!=0b01000000)
                 _0x78:
0002db 940e 0b0d 	CALL SUBOPT_0x29
0002dd f019      	BREQ _0x7A
                 ; 0000 01DD {cek_sensor();
0002de 940e 0b12 	CALL SUBOPT_0x2A
                 ; 0000 01DE kanan(ki,ka);
                 ; 0000 01DF }
0002e0 cffa      	RJMP _0x78
                 _0x7A:
                 ; 0000 01E0 while ((sensor & 0b01000000)==0b01000000)
                 _0x7B:
0002e1 940e 0b0d 	CALL SUBOPT_0x29
0002e3 f419      	BRNE _0x7D
                 ; 0000 01E1 {cek_sensor();
0002e4 940e 0b12 	CALL SUBOPT_0x2A
                 ; 0000 01E2 kanan(ki,ka);
                 ; 0000 01E3 }
0002e6 cffa      	RJMP _0x7B
                 _0x7D:
                 ; 0000 01E4 while ((sensor & 0b00000001)!=0b00000001)
                 _0x7E:
0002e7 940e 0b01 	CALL SUBOPT_0x27
0002e9 f019      	BREQ _0x80
                 ; 0000 01E5 {cek_sensor();
0002ea 940e 0b12 	CALL SUBOPT_0x2A
                 ; 0000 01E6 kanan(ki,ka);
                 ; 0000 01E7 }
0002ec cffa      	RJMP _0x7E
                 _0x80:
                 ; 0000 01E8 rem(100);
0002ed 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 01E9 lcd_kedip(3);
0002ef e0a3      	LDI  R26,LOW(3)
0002f0 e0b0      	LDI  R27,0
0002f1 df0c      	RCALL _lcd_kedip
                 ; 0000 01EA }
0002f2 c1ee      	RJMP _0x20C0006
                 ; .FEND
                 ;void belka(int ki ,int ka)
                 ; 0000 01EE {
                 _belka:
                 ; .FSTART _belka
                 ; 0000 01EF cek_sensor();       //ka......ki
0002f3 940e 0a52 	CALL SUBOPT_0xD
                 ;	ki -> Y+2
                 ;	ka -> Y+0
                 ; 0000 01F0 while ((sensor & 0b01000000)!=0b01000000)
                 _0x81:
0002f5 940e 0b0d 	CALL SUBOPT_0x29
0002f7 f019      	BREQ _0x83
                 ; 0000 01F1 {
                 ; 0000 01F2 cek_sensor();
0002f8 940e 0b12 	CALL SUBOPT_0x2A
                 ; 0000 01F3 kanan(ki,ka);
                 ; 0000 01F4 }
0002fa cffa      	RJMP _0x81
                 _0x83:
                 ; 0000 01F5 }
0002fb c1e5      	RJMP _0x20C0006
                 ; .FEND
                 ;void scanmundur(int ki ,int ka)
                 ; 0000 01F7 {
                 _scanmundur:
                 ; .FSTART _scanmundur
                 ; 0000 01F8 cek_sensor();       //ka......ki
0002fc 940e 0a52 	CALL SUBOPT_0xD
                 ;	ki -> Y+2
                 ;	ka -> Y+0
                 ; 0000 01F9 while ((sensor & 0b01000000)!=0b01000000)
                 _0x84:
0002fe 940e 0b0d 	CALL SUBOPT_0x29
000300 f019      	BREQ _0x86
                 ; 0000 01FA {
                 ; 0000 01FB cek_sensor();
000301 940e 0b19 	CALL SUBOPT_0x2B
                 ; 0000 01FC mundur(ki,ka);
                 ; 0000 01FD }
000303 cffa      	RJMP _0x84
                 _0x86:
                 ; 0000 01FE while ((sensor & 0b01000000)==0b01000000)
                 _0x87:
000304 940e 0b0d 	CALL SUBOPT_0x29
000306 f419      	BRNE _0x89
                 ; 0000 01FF {
                 ; 0000 0200 cek_sensor();
000307 940e 0b19 	CALL SUBOPT_0x2B
                 ; 0000 0201 mundur(ki,ka);
                 ; 0000 0202 }
000309 cffa      	RJMP _0x87
                 _0x89:
                 ; 0000 0203 }
00030a c1d6      	RJMP _0x20C0006
                 ; .FEND
                 ;void arah2hijau()
                 ; 0000 0205 {
                 _arah2hijau:
                 ; .FSTART _arah2hijau
                 ; 0000 0206 scanX(1,185);
00030b 940e 09fe 	CALL SUBOPT_0x2
00030d 940e 0a03 	CALL SUBOPT_0x3
                 ; 0000 0207 rem(100);
00030f 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 0208 //ambil();
                 ; 0000 0209 scan0(3,190);
000311 940e 0a07 	CALL SUBOPT_0x4
000313 ebae      	LDI  R26,LOW(190)
000314 940e 0a0c 	CALL SUBOPT_0x5
                 ; 0000 020A scan0rem(170);
                 ; 0000 020B rem(100);
                 ; 0000 020C scanmundur(160,160);
                 ; 0000 020D rem(100);
                 ; 0000 020E belka(170,170);
000316 940e 0a23 	CALL SUBOPT_0x6
000318 dfda      	RCALL _belka
                 ; 0000 020F scan7ki2(1,200);
000319 940e 09fe 	CALL SUBOPT_0x2
00031b 940e 0a2a 	CALL SUBOPT_0x7
                 ; 0000 0210 belki2(190,190);
00031d 940e 0a32 	CALL SUBOPT_0x9
00031f dfa5      	RCALL _belki2
                 ; 0000 0211 rem(100);
000320 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 0212 buang();
000322 ddff      	RCALL _buang
                 ; 0000 0213 rem(100);
000323 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 0214 mundur(160,160);
000325 940e 0a39 	CALL SUBOPT_0xA
                 ; 0000 0215 delay_ms(100);
                 ; 0000 0216 belki2(180,180);
000327 940e 0b20 	CALL SUBOPT_0x2C
                 ; 0000 0217 scan7ka2(1,200);
000329 940e 09fe 	CALL SUBOPT_0x2
00032b eca8      	LDI  R26,LOW(200)
00032c e0b0      	LDI  R27,0
00032d d159      	RCALL _scan7ka2
                 ; 0000 0218 belki(160,160);
00032e 940e 0b28 	CALL SUBOPT_0x2D
                 ; 0000 0219 ///belka(170,170);
                 ; 0000 021A scanX(1,200);
000330 c01b      	RJMP _0x20C0007
                 ; 0000 021B //rem(500);
                 ; 0000 021C 
                 ; 0000 021D scan0(2,190);
                 ; 0000 021E //rem(100);
                 ; 0000 021F 
                 ; 0000 0220 scanX(1,220);
                 ; 0000 0221 lcd_kedip(3);
                 ; 0000 0222 scan0rem(180);
                 ; 0000 0223 rem(100);
                 ; 0000 0224 }
                 ; .FEND
                 ;void arah2merah()
                 ; 0000 0226 {
                 _arah2merah:
                 ; .FSTART _arah2merah
                 ; 0000 0227 scanX(1,185);
000331 940e 09fe 	CALL SUBOPT_0x2
000333 940e 0a03 	CALL SUBOPT_0x3
                 ; 0000 0228 rem(100);
000335 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 0229 //ambil();
                 ; 0000 022A scan0(3,190);
000337 940e 0a07 	CALL SUBOPT_0x4
000339 ebae      	LDI  R26,LOW(190)
00033a 940e 0a0c 	CALL SUBOPT_0x5
                 ; 0000 022B scan0rem(170);
                 ; 0000 022C rem(100);
                 ; 0000 022D scanmundur(160,160);
                 ; 0000 022E rem(100);
                 ; 0000 022F kiri(180,180);
00033c ebe4      	LDI  R30,LOW(180)
00033d 93ea      	ST   -Y,R30
00033e eba4      	LDI  R26,LOW(180)
00033f dee6      	RCALL _kiri
                 ; 0000 0230 delay_ms(300);
000340 e2ac      	LDI  R26,LOW(300)
000341 e0b1      	LDI  R27,HIGH(300)
000342 940e 0c28 	CALL _delay_ms
                 ; 0000 0231 rem(100);
000344 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 0232 buang();
000346 dddb      	RCALL _buang
                 ; 0000 0233 belki2(180,180);
000347 940e 0b20 	CALL SUBOPT_0x2C
                 ; 0000 0234 belki2(170,170);
000349 940e 0a23 	CALL SUBOPT_0x6
00034b df79      	RCALL _belki2
                 ; 0000 0235 ///belka(170,170);
                 ; 0000 0236 scanX(1,200);
                 _0x20C0007:
00034c e0e1      	LDI  R30,LOW(1)
00034d e0f0      	LDI  R31,HIGH(1)
00034e 93fa      	ST   -Y,R31
00034f 93ea      	ST   -Y,R30
000350 eca8      	LDI  R26,LOW(200)
000351 e0b0      	LDI  R27,0
000352 de16      	RCALL _scanX
                 ; 0000 0237 //rem(500);
                 ; 0000 0238 
                 ; 0000 0239 scan0(2,190);
000353 e0e2      	LDI  R30,LOW(2)
000354 e0f0      	LDI  R31,HIGH(2)
000355 93fa      	ST   -Y,R31
000356 93ea      	ST   -Y,R30
000357 ebae      	LDI  R26,LOW(190)
000358 e0b0      	LDI  R27,0
000359 d145      	RCALL _scan0
                 ; 0000 023A //rem(100);
                 ; 0000 023B 
                 ; 0000 023C scanX(1,220);
00035a 940e 09fe 	CALL SUBOPT_0x2
00035c edac      	LDI  R26,LOW(220)
00035d e0b0      	LDI  R27,0
00035e de0a      	RCALL _scanX
                 ; 0000 023D lcd_kedip(3);
00035f e0a3      	LDI  R26,LOW(3)
000360 e0b0      	LDI  R27,0
000361 de9c      	RCALL _lcd_kedip
                 ; 0000 023E scan0rem(180);
000362 eba4      	LDI  R26,LOW(180)
000363 e0b0      	LDI  R27,0
000364 d157      	RCALL _scan0rem
                 ; 0000 023F rem(100);
000365 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 0240 }
000367 9508      	RET
                 ; .FEND
                 ;void scan(int kec)
                 ; 0000 0243 {       cek_sensor();
                 _scan:
                 ; .FSTART _scan
000368 940e 0a52 	CALL SUBOPT_0xD
                 ;	kec -> Y+0
                 ; 0000 0244 sensor=sensor & 0b01111111;
00036a 91e0 019f 	LDS  R30,_sensor
00036c 77ef      	ANDI R30,0x7F
00036d 93e0 019f 	STS  _sensor,R30
                 ; 0000 0245 switch(sensor)          //  1=kiri 8=kanan
00036f e0f0      	LDI  R31,0
                 ; 0000 0246 {          //  7......1
                 ; 0000 0247 case 0b00000001: maju(kec-100,kec);   x=1;     break;//DOMINAN KANAN
000370 30e1      	CPI  R30,LOW(0x1)
000371 e0a0      	LDI  R26,HIGH(0x1)
000372 07fa      	CPC  R31,R26
000373 f429      	BRNE _0x8D
000374 81e8      	LD   R30,Y
000375 56e4      	SUBI R30,LOW(100)
000376 940e 0b30 	CALL SUBOPT_0x2E
000378 c089      	RJMP _0x8C
                 ; 0000 0248 case 0b00000011: maju(kec-70,kec);   x=1;      break;
                 _0x8D:
000379 30e3      	CPI  R30,LOW(0x3)
00037a e0a0      	LDI  R26,HIGH(0x3)
00037b 07fa      	CPC  R31,R26
00037c f419      	BRNE _0x8E
00037d 940e 0b37 	CALL SUBOPT_0x2F
00037f c082      	RJMP _0x8C
                 ; 0000 0249 case 0b00000111: maju(kec-70,kec);   x=1;      break;
                 _0x8E:
000380 30e7      	CPI  R30,LOW(0x7)
000381 e0a0      	LDI  R26,HIGH(0x7)
000382 07fa      	CPC  R31,R26
000383 f419      	BRNE _0x8F
000384 940e 0b37 	CALL SUBOPT_0x2F
000386 c07b      	RJMP _0x8C
                 ; 0000 024A case 0b00000010: maju(kec-40,kec);   x=1;      break;
                 _0x8F:
000387 30e2      	CPI  R30,LOW(0x2)
000388 e0a0      	LDI  R26,HIGH(0x2)
000389 07fa      	CPC  R31,R26
00038a f419      	BRNE _0x90
00038b 940e 0b3a 	CALL SUBOPT_0x30
00038d c074      	RJMP _0x8C
                 ; 0000 024B case 0b00000110: maju(kec-40,kec);   x=1;      break;
                 _0x90:
00038e 30e6      	CPI  R30,LOW(0x6)
00038f e0a0      	LDI  R26,HIGH(0x6)
000390 07fa      	CPC  R31,R26
000391 f419      	BRNE _0x91
000392 940e 0b3a 	CALL SUBOPT_0x30
000394 c06d      	RJMP _0x8C
                 ; 0000 024C case 0b00001110: maju(kec-40,kec);   x=1;      break;
                 _0x91:
000395 30ee      	CPI  R30,LOW(0xE)
000396 e0a0      	LDI  R26,HIGH(0xE)
000397 07fa      	CPC  R31,R26
000398 f419      	BRNE _0x92
000399 940e 0b3a 	CALL SUBOPT_0x30
00039b c066      	RJMP _0x8C
                 ; 0000 024D case 0b00000100: maju(kec-20,kec);   x=1;      break;
                 _0x92:
00039c 30e4      	CPI  R30,LOW(0x4)
00039d e0a0      	LDI  R26,HIGH(0x4)
00039e 07fa      	CPC  R31,R26
00039f f429      	BRNE _0x93
0003a0 81e8      	LD   R30,Y
0003a1 51e4      	SUBI R30,LOW(20)
0003a2 940e 0b30 	CALL SUBOPT_0x2E
0003a4 c05d      	RJMP _0x8C
                 ; 0000 024E case 0b00001100: maju(kec-10,kec);   x=1;      break;
                 _0x93:
0003a5 30ec      	CPI  R30,LOW(0xC)
0003a6 e0a0      	LDI  R26,HIGH(0xC)
0003a7 07fa      	CPC  R31,R26
0003a8 f429      	BRNE _0x94
0003a9 81e8      	LD   R30,Y
0003aa 50ea      	SUBI R30,LOW(10)
0003ab 940e 0b30 	CALL SUBOPT_0x2E
0003ad c054      	RJMP _0x8C
                 ; 0000 024F case 0b00001000: maju(kec,kec);                break;
                 _0x94:
0003ae 30e8      	CPI  R30,LOW(0x8)
0003af e0a0      	LDI  R26,HIGH(0x8)
0003b0 07fa      	CPC  R31,R26
0003b1 f429      	BRNE _0x95
0003b2 81e8      	LD   R30,Y
0003b3 93ea      	ST   -Y,R30
0003b4 81a9      	LDD  R26,Y+1
0003b5 de5b      	RCALL _maju
0003b6 c04b      	RJMP _0x8C
                 ; 0000 0250 case 0b00011000: maju(kec,kec-10);   x=0;      break;
                 _0x95:
0003b7 31e8      	CPI  R30,LOW(0x18)
0003b8 e0a0      	LDI  R26,HIGH(0x18)
0003b9 07fa      	CPC  R31,R26
0003ba f419      	BRNE _0x96
0003bb 940e 0b3d 	CALL SUBOPT_0x31
0003bd c044      	RJMP _0x8C
                 ; 0000 0251 case 0b00010000: maju(kec,kec-20);   x=0;      break;
                 _0x96:
0003be 31e0      	CPI  R30,LOW(0x10)
0003bf e0a0      	LDI  R26,HIGH(0x10)
0003c0 07fa      	CPC  R31,R26
0003c1 f429      	BRNE _0x97
0003c2 940e 0b46 	CALL SUBOPT_0x32
0003c4 940e 0b4b 	CALL SUBOPT_0x33
0003c6 c03b      	RJMP _0x8C
                 ; 0000 0252 case 0b00111000: maju(kec,kec-40);   x=0;      break;
                 _0x97:
0003c7 33e8      	CPI  R30,LOW(0x38)
0003c8 e0a0      	LDI  R26,HIGH(0x38)
0003c9 07fa      	CPC  R31,R26
0003ca f419      	BRNE _0x98
0003cb 940e 0b50 	CALL SUBOPT_0x34
0003cd c034      	RJMP _0x8C
                 ; 0000 0253 case 0b00110000: maju(kec,kec-40);   x=0;      break;
                 _0x98:
0003ce 33e0      	CPI  R30,LOW(0x30)
0003cf e0a0      	LDI  R26,HIGH(0x30)
0003d0 07fa      	CPC  R31,R26
0003d1 f419      	BRNE _0x99
0003d2 940e 0b50 	CALL SUBOPT_0x34
0003d4 c02d      	RJMP _0x8C
                 ; 0000 0254 case 0b00100000: maju(kec,kec-40);   x=0;      break;
                 _0x99:
0003d5 32e0      	CPI  R30,LOW(0x20)
0003d6 e0a0      	LDI  R26,HIGH(0x20)
0003d7 07fa      	CPC  R31,R26
0003d8 f419      	BRNE _0x9A
0003d9 940e 0b50 	CALL SUBOPT_0x34
0003db c026      	RJMP _0x8C
                 ; 0000 0255 case 0b01110000: maju(kec,kec-70);   x=0;      break;
                 _0x9A:
0003dc 37e0      	CPI  R30,LOW(0x70)
0003dd e0a0      	LDI  R26,HIGH(0x70)
0003de 07fa      	CPC  R31,R26
0003df f419      	BRNE _0x9B
0003e0 940e 0b55 	CALL SUBOPT_0x35
0003e2 c01f      	RJMP _0x8C
                 ; 0000 0256 case 0b01100000: maju(kec,kec-70);   x=0;      break;
                 _0x9B:
0003e3 36e0      	CPI  R30,LOW(0x60)
0003e4 e0a0      	LDI  R26,HIGH(0x60)
0003e5 07fa      	CPC  R31,R26
0003e6 f419      	BRNE _0x9C
0003e7 940e 0b55 	CALL SUBOPT_0x35
0003e9 c018      	RJMP _0x8C
                 ; 0000 0257 case 0b01000000: maju(kec,kec-100);   x=0;     break;// DOMINAN KIRI
                 _0x9C:
0003ea 34e0      	CPI  R30,LOW(0x40)
0003eb e0a0      	LDI  R26,HIGH(0x40)
0003ec 07fa      	CPC  R31,R26
0003ed f439      	BRNE _0x9D
0003ee 81e8      	LD   R30,Y
0003ef 93ea      	ST   -Y,R30
0003f0 81a9      	LDD  R26,Y+1
0003f1 56a4      	SUBI R26,LOW(100)
0003f2 940e 0b4b 	CALL SUBOPT_0x33
0003f4 c00d      	RJMP _0x8C
                 ; 0000 0258 case 0b00000000:
                 _0x9D:
0003f5 9730      	SBIW R30,0
0003f6 f459      	BRNE _0x8C
                 ; 0000 0259 if(x==1) {
0003f7 fe20      	SBRS R2,0
0003f8 c006      	RJMP _0x9F
                 ; 0000 025A kiri(kec-20,kec);
0003f9 81e8      	LD   R30,Y
0003fa 51e4      	SUBI R30,LOW(20)
0003fb 93ea      	ST   -Y,R30
0003fc 81a9      	LDD  R26,Y+1
0003fd de28      	RCALL _kiri
                 ; 0000 025B break;}
0003fe c003      	RJMP _0x8C
                 ; 0000 025C else  {
                 _0x9F:
                 ; 0000 025D kanan(kec,kec-20);
0003ff 940e 0b46 	CALL SUBOPT_0x32
000401 de1d      	RCALL _kanan
                 ; 0000 025E break;}
                 ; 0000 025F }
                 _0x8C:
                 ; 0000 0260 }
000402 940c 094d 	JMP  _0x20C0003
                 ; .FEND
                 ;void scan2(int kec)
                 ; 0000 0262 {       cek_sensor();
                 _scan2:
                 ; .FSTART _scan2
000404 940e 0a52 	CALL SUBOPT_0xD
                 ;	kec -> Y+0
                 ; 0000 0263 sensor=sensor & 0b00111110;
000406 91e0 019f 	LDS  R30,_sensor
000408 73ee      	ANDI R30,LOW(0x3E)
000409 93e0 019f 	STS  _sensor,R30
                 ; 0000 0264 switch(sensor)          //  1=kiri 8=kanan
00040b e0f0      	LDI  R31,0
                 ; 0000 0265 {          //  7......1
                 ; 0000 0266 case 0b00000010: maju(kec-140,kec);  x=1;      break;
00040c 30e2      	CPI  R30,LOW(0x2)
00040d e0a0      	LDI  R26,HIGH(0x2)
00040e 07fa      	CPC  R31,R26
00040f f429      	BRNE _0xA4
000410 81e8      	LD   R30,Y
000411 58ec      	SUBI R30,LOW(140)
000412 940e 0b30 	CALL SUBOPT_0x2E
000414 c070      	RJMP _0xA3
                 ; 0000 0267 case 0b00000110: maju(kec-70,kec);   x=1;      break;
                 _0xA4:
000415 30e6      	CPI  R30,LOW(0x6)
000416 e0a0      	LDI  R26,HIGH(0x6)
000417 07fa      	CPC  R31,R26
000418 f419      	BRNE _0xA5
000419 940e 0b37 	CALL SUBOPT_0x2F
00041b c069      	RJMP _0xA3
                 ; 0000 0268 case 0b00001110: maju(kec-40,kec);   x=1;      break;
                 _0xA5:
00041c 30ee      	CPI  R30,LOW(0xE)
00041d e0a0      	LDI  R26,HIGH(0xE)
00041e 07fa      	CPC  R31,R26
00041f f419      	BRNE _0xA6
000420 940e 0b3a 	CALL SUBOPT_0x30
000422 c062      	RJMP _0xA3
                 ; 0000 0269 case 0b00000100: maju(kec-20,kec);   x=1;      break;
                 _0xA6:
000423 30e4      	CPI  R30,LOW(0x4)
000424 e0a0      	LDI  R26,HIGH(0x4)
000425 07fa      	CPC  R31,R26
000426 f429      	BRNE _0xA7
000427 81e8      	LD   R30,Y
000428 51e4      	SUBI R30,LOW(20)
000429 940e 0b30 	CALL SUBOPT_0x2E
00042b c059      	RJMP _0xA3
                 ; 0000 026A case 0b00001100: maju(kec-10,kec);   x=1;      break;
                 _0xA7:
00042c 30ec      	CPI  R30,LOW(0xC)
00042d e0a0      	LDI  R26,HIGH(0xC)
00042e 07fa      	CPC  R31,R26
00042f f429      	BRNE _0xA8
000430 81e8      	LD   R30,Y
000431 50ea      	SUBI R30,LOW(10)
000432 940e 0b30 	CALL SUBOPT_0x2E
000434 c050      	RJMP _0xA3
                 ; 0000 026B case 0b00011100: maju(kec,kec+3);              break;
                 _0xA8:
000435 31ec      	CPI  R30,LOW(0x1C)
000436 e0a0      	LDI  R26,HIGH(0x1C)
000437 07fa      	CPC  R31,R26
000438 f419      	BRNE _0xA9
000439 940e 0b5a 	CALL SUBOPT_0x36
00043b c048      	RJMP _0x199
                 ; 0000 026C case 0b00001000: maju(kec,kec+3);              break;
                 _0xA9:
00043c 30e8      	CPI  R30,LOW(0x8)
00043d e0a0      	LDI  R26,HIGH(0x8)
00043e 07fa      	CPC  R31,R26
00043f f419      	BRNE _0xAA
000440 940e 0b5a 	CALL SUBOPT_0x36
000442 c041      	RJMP _0x199
                 ; 0000 026D case 0b00011000: maju(kec,kec-10);   x=0;      break;
                 _0xAA:
000443 31e8      	CPI  R30,LOW(0x18)
000444 e0a0      	LDI  R26,HIGH(0x18)
000445 07fa      	CPC  R31,R26
000446 f419      	BRNE _0xAB
000447 940e 0b3d 	CALL SUBOPT_0x31
000449 c03b      	RJMP _0xA3
                 ; 0000 026E case 0b00010000: maju(kec,kec-20);   x=0;      break;
                 _0xAB:
00044a 31e0      	CPI  R30,LOW(0x10)
00044b e0a0      	LDI  R26,HIGH(0x10)
00044c 07fa      	CPC  R31,R26
00044d f429      	BRNE _0xAC
00044e 940e 0b46 	CALL SUBOPT_0x32
000450 940e 0b4b 	CALL SUBOPT_0x33
000452 c032      	RJMP _0xA3
                 ; 0000 026F case 0b00111000: maju(kec,kec-40);   x=0;      break;
                 _0xAC:
000453 33e8      	CPI  R30,LOW(0x38)
000454 e0a0      	LDI  R26,HIGH(0x38)
000455 07fa      	CPC  R31,R26
000456 f419      	BRNE _0xAD
000457 940e 0b50 	CALL SUBOPT_0x34
000459 c02b      	RJMP _0xA3
                 ; 0000 0270 case 0b00110000: maju(kec,kec-70);   x=0;      break;
                 _0xAD:
00045a 33e0      	CPI  R30,LOW(0x30)
00045b e0a0      	LDI  R26,HIGH(0x30)
00045c 07fa      	CPC  R31,R26
00045d f419      	BRNE _0xAE
00045e 940e 0b55 	CALL SUBOPT_0x35
000460 c024      	RJMP _0xA3
                 ; 0000 0271 case 0b00100000: maju(kec,kec-140);  x=0;      break;
                 _0xAE:
000461 32e0      	CPI  R30,LOW(0x20)
000462 e0a0      	LDI  R26,HIGH(0x20)
000463 07fa      	CPC  R31,R26
000464 f439      	BRNE _0xAF
000465 81e8      	LD   R30,Y
000466 93ea      	ST   -Y,R30
000467 81a9      	LDD  R26,Y+1
000468 58ac      	SUBI R26,LOW(140)
000469 940e 0b4b 	CALL SUBOPT_0x33
00046b c019      	RJMP _0xA3
                 ; 0000 0272 case 0b01111111: maju(kec,kec);            break;
                 _0xAF:
00046c 37ef      	CPI  R30,LOW(0x7F)
00046d e0a0      	LDI  R26,HIGH(0x7F)
00046e 07fa      	CPC  R31,R26
00046f f089      	BREQ _0x19A
                 ; 0000 0273 case 0b00000000: maju(kec,kec+3);              break;
000470 9730      	SBIW R30,0
000471 f419      	BRNE _0xB1
000472 940e 0b5a 	CALL SUBOPT_0x36
000474 c00f      	RJMP _0x199
                 ; 0000 0274 case 0b01101101: maju(kec,kec);            break;
                 _0xB1:
000475 36ed      	CPI  R30,LOW(0x6D)
000476 e0a0      	LDI  R26,HIGH(0x6D)
000477 07fa      	CPC  R31,R26
000478 f041      	BREQ _0x19A
                 ; 0000 0275 case 0b01111011: maju(kec,kec);            break;
000479 37eb      	CPI  R30,LOW(0x7B)
00047a e0a0      	LDI  R26,HIGH(0x7B)
00047b 07fa      	CPC  R31,R26
00047c f021      	BREQ _0x19A
                 ; 0000 0276 case 0b01011011: maju(kec,kec);            break;
00047d 35eb      	CPI  R30,LOW(0x5B)
00047e e0a0      	LDI  R26,HIGH(0x5B)
00047f 07fa      	CPC  R31,R26
000480 f421      	BRNE _0xA3
                 _0x19A:
000481 81e8      	LD   R30,Y
000482 93ea      	ST   -Y,R30
000483 81a9      	LDD  R26,Y+1
                 _0x199:
000484 dd8c      	RCALL _maju
                 ; 0000 0277 
                 ; 0000 0278 }
                 _0xA3:
                 ; 0000 0279 }
000485 940c 094d 	JMP  _0x20C0003
                 ; .FEND
                 ;void scan7ki(int brpkali,int kec1)
                 ; 0000 027B {       cek_sensor();
                 ;	brpkali -> Y+2
                 ;	kec1 -> Y+0
                 ; 0000 027C while (hitung<brpkali)
                 ; 0000 027D {
                 ; 0000 027E while ((sensor & 0b00000001)!=0b00000001)
                 ; 0000 027F {cek_sensor();
                 ; 0000 0280 scan2(kec1);
                 ; 0000 0281 }
                 ; 0000 0282 
                 ; 0000 0283 while ((sensor & 0b00000001)==0b00000001)
                 ; 0000 0284 {    cek_sensor();
                 ; 0000 0285 lampu=0;
                 ; 0000 0286 scan2(kec1);
                 ; 0000 0287 if ((sensor & 0b00000001)!=0b00000001) {
                 ; 0000 0288 hitung++;
                 ; 0000 0289 lampu=1;
                 ; 0000 028A };
                 ; 0000 028B }
                 ; 0000 028C };
                 ; 0000 028D hitung=0;
                 ; 0000 028E }
                 ;void scan7ka(int brpkali,int kec1)
                 ; 0000 0290 {      cek_sensor();
                 ;	brpkali -> Y+2
                 ;	kec1 -> Y+0
                 ; 0000 0291 while (hitung<brpkali)
                 ; 0000 0292 {
                 ; 0000 0293 while ((sensor & 0b00100000)!=0b00100000)
                 ; 0000 0294 {cek_sensor();
                 ; 0000 0295 scan2(kec1);
                 ; 0000 0296 }
                 ; 0000 0297 
                 ; 0000 0298 while ((sensor & 0b00100000)==0b00100000)
                 ; 0000 0299 {    cek_sensor();
                 ; 0000 029A lampu=0;
                 ; 0000 029B scan2(kec1);
                 ; 0000 029C if ((sensor & 0b00100000)!=0b00100000) {
                 ; 0000 029D hitung++;
                 ; 0000 029E lampu=1;
                 ; 0000 029F };
                 ; 0000 02A0 }
                 ; 0000 02A1 };
                 ; 0000 02A2 hitung=0;
                 ; 0000 02A3 }
                 ;void scan7ka2(int brpkali,int kec1)
                 ; 0000 02A5 {       cek_sensor();
                 _scan7ka2:
                 ; .FSTART _scan7ka2
000487 940e 0a52 	CALL SUBOPT_0xD
                 ;	brpkali -> Y+2
                 ;	kec1 -> Y+0
                 ; 0000 02A6 while (hitung<brpkali)
                 _0xD1:
000489 940e 0a56 	CALL SUBOPT_0xE
00048b f494      	BRGE _0xD3
                 ; 0000 02A7 {
                 ; 0000 02A8 while ((sensor & 0b00100000)!=0b00100000)
                 _0xD4:
00048c 940e 0b5f 	CALL SUBOPT_0x37
00048e f019      	BREQ _0xD6
                 ; 0000 02A9 {cek_sensor();
00048f 940e 0a60 	CALL SUBOPT_0x10
                 ; 0000 02AA scan(kec1);
                 ; 0000 02AB }
000491 cffa      	RJMP _0xD4
                 _0xD6:
                 ; 0000 02AC 
                 ; 0000 02AD while ((sensor & 0b00100000)==0b00100000)
                 _0xD7:
000492 940e 0b5f 	CALL SUBOPT_0x37
000494 f441      	BRNE _0xD9
                 ; 0000 02AE {    cek_sensor();
000495 940e 0a66 	CALL SUBOPT_0x11
                 ; 0000 02AF lampu=0;
                 ; 0000 02B0 scan(kec1);
                 ; 0000 02B1 if ((sensor & 0b00100000)!=0b00100000) {
000497 940e 0b5f 	CALL SUBOPT_0x37
000499 f011      	BREQ _0xDC
                 ; 0000 02B2 hitung++;
00049a 940e 0a6d 	CALL SUBOPT_0x12
                 ; 0000 02B3 lampu=1;
                 ; 0000 02B4 };
                 _0xDC:
                 ; 0000 02B5 }
00049c cff5      	RJMP _0xD7
                 _0xD9:
                 ; 0000 02B6 };
00049d cfeb      	RJMP _0xD1
                 _0xD3:
                 ; 0000 02B7 hitung=0;
00049e c040      	RJMP _0x20C0005
                 ; 0000 02B8 }
                 ; .FEND
                 ;void scan0(int brpkali,int kec1)
                 ; 0000 02BA {      cek_sensor();
                 _scan0:
                 ; .FSTART _scan0
00049f 940e 0a52 	CALL SUBOPT_0xD
                 ;	brpkali -> Y+2
                 ;	kec1 -> Y+0
                 ; 0000 02BB while (hitung<brpkali)
                 _0xDF:
0004a1 940e 0a56 	CALL SUBOPT_0xE
0004a3 f4bc      	BRGE _0xE1
                 ; 0000 02BC {
                 ; 0000 02BD while ((sensor & 0b01111111)!=0b00000000)
                 _0xE2:
0004a4 940e 0b64 	CALL SUBOPT_0x38
0004a6 f019      	BREQ _0xE4
                 ; 0000 02BE {cek_sensor();
0004a7 940e 0b69 	CALL SUBOPT_0x39
                 ; 0000 02BF scan2(kec1);
                 ; 0000 02C0 }
0004a9 cffa      	RJMP _0xE2
                 _0xE4:
                 ; 0000 02C1 
                 ; 0000 02C2 while ((sensor & 0b01111111)==0b00000000)
                 _0xE5:
0004aa 940e 0b64 	CALL SUBOPT_0x38
0004ac f469      	BRNE _0xE7
                 ; 0000 02C3 {    cek_sensor();
0004ad dd21      	RCALL _cek_sensor
                 ; 0000 02C4 lampu=0;
0004ae 98c3      	CBI  0x18,3
                 ; 0000 02C5 scan2(kec1);
0004af 81a8      	LD   R26,Y
0004b0 81b9      	LDD  R27,Y+1
0004b1 df52      	RCALL _scan2
                 ; 0000 02C6 if ((sensor & 0b01111111)!=0b00000000) {
0004b2 940e 0b64 	CALL SUBOPT_0x38
0004b4 f021      	BREQ _0xEA
                 ; 0000 02C7 hitung++;
0004b5 01f2      	MOVW R30,R4
0004b6 9631      	ADIW R30,1
0004b7 012f      	MOVW R4,R30
                 ; 0000 02C8 lampu=1;
0004b8 9ac3      	SBI  0x18,3
                 ; 0000 02C9 };
                 _0xEA:
                 ; 0000 02CA }
0004b9 cff0      	RJMP _0xE5
                 _0xE7:
                 ; 0000 02CB };
0004ba cfe6      	RJMP _0xDF
                 _0xE1:
                 ; 0000 02CC hitung=0;
0004bb c023      	RJMP _0x20C0005
                 ; 0000 02CD }
                 ; .FEND
                 ;void scan0rem(int kec1)
                 ; 0000 02CF {   cek_sensor();
                 _scan0rem:
                 ; .FSTART _scan0rem
0004bc 940e 0a52 	CALL SUBOPT_0xD
                 ;	kec1 -> Y+0
                 ; 0000 02D0 while ((sensor & 0b01111111)!=0b00000000)
                 _0xED:
0004be 940e 0b64 	CALL SUBOPT_0x38
0004c0 f019      	BREQ _0xEF
                 ; 0000 02D1 {cek_sensor();
0004c1 940e 0b69 	CALL SUBOPT_0x39
                 ; 0000 02D2 scan2(kec1);
                 ; 0000 02D3 }
0004c3 cffa      	RJMP _0xED
                 _0xEF:
                 ; 0000 02D4 rem(100);
0004c4 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 02D5 }
0004c6 940c 094d 	JMP  _0x20C0003
                 ; .FEND
                 ;void scan7ki2(int brpkali,int kec1)
                 ; 0000 02D8 {      cek_sensor();
                 _scan7ki2:
                 ; .FSTART _scan7ki2
0004c8 940e 0a52 	CALL SUBOPT_0xD
                 ;	brpkali -> Y+2
                 ;	kec1 -> Y+0
                 ; 0000 02D9 while (hitung<brpkali)
                 _0xF0:
0004ca 940e 0a56 	CALL SUBOPT_0xE
0004cc f494      	BRGE _0xF2
                 ; 0000 02DA {
                 ; 0000 02DB while ((sensor & 0b00000001)!=0b00000001)
                 _0xF3:
0004cd 940e 0b01 	CALL SUBOPT_0x27
0004cf f019      	BREQ _0xF5
                 ; 0000 02DC {cek_sensor();
0004d0 940e 0a60 	CALL SUBOPT_0x10
                 ; 0000 02DD scan(kec1);
                 ; 0000 02DE }
0004d2 cffa      	RJMP _0xF3
                 _0xF5:
                 ; 0000 02DF 
                 ; 0000 02E0 while ((sensor & 0b00000001)==0b00000001)
                 _0xF6:
0004d3 940e 0b01 	CALL SUBOPT_0x27
0004d5 f441      	BRNE _0xF8
                 ; 0000 02E1 {    cek_sensor();
0004d6 940e 0a66 	CALL SUBOPT_0x11
                 ; 0000 02E2 lampu=0;
                 ; 0000 02E3 scan(kec1);
                 ; 0000 02E4 if ((sensor & 0b00000001)!=0b00000001) {
0004d8 940e 0b01 	CALL SUBOPT_0x27
0004da f011      	BREQ _0xFB
                 ; 0000 02E5 hitung++;
0004db 940e 0a6d 	CALL SUBOPT_0x12
                 ; 0000 02E6 lampu=1;
                 ; 0000 02E7 };
                 _0xFB:
                 ; 0000 02E8 }
0004dd cff5      	RJMP _0xF6
                 _0xF8:
                 ; 0000 02E9 };
0004de cfeb      	RJMP _0xF0
                 _0xF2:
                 ; 0000 02EA hitung=0;
                 _0x20C0005:
0004df 2444      	CLR  R4
0004e0 2455      	CLR  R5
                 ; 0000 02EB }
                 _0x20C0006:
0004e1 9624      	ADIW R28,4
0004e2 9508      	RET
                 ; .FEND
                 ;void cekdatasensor()
                 ; 0000 02EE {
                 ; 0000 02EF for(i=0;i<7;i++)
                 ; 0000 02F0 {
                 ; 0000 02F1 lcd_gotoxy(0,0);
                 ; 0000 02F2 sprintf(buff,"data ke = %d ",i);
                 ; 0000 02F3 lcd_puts(buff);
                 ; 0000 02F4 
                 ; 0000 02F5 lcd_gotoxy(0,1);
                 ; 0000 02F6 sprintf(buff,"sensing = %d  ",read_adc(i));
                 ; 0000 02F7 lcd_puts(buff);
                 ; 0000 02F8 delay_ms(1000);
                 ; 0000 02F9 }
                 ; 0000 02FA }
                 ;void parkir()
                 ; 0000 02FD {  lampu=0; while(1){rem(100);} }
                 _parkir:
                 ; .FSTART _parkir
0004e3 98c3      	CBI  0x18,3
                 _0x103:
0004e4 940e 0a2e 	CALL SUBOPT_0x8
0004e6 cffd      	RJMP _0x103
                 ; .FEND
                 ;void maju_cari_garis(int brpkali,int kec1)
                 ; 0000 0300 {
                 ; 0000 0301 cek_sensor(); maju(kec1,kec1);
                 ;	brpkali -> Y+2
                 ;	kec1 -> Y+0
                 ; 0000 0302 while (hitung<brpkali) {
                 ; 0000 0303 while ((sensor & 0b0011100)!=0b0011100)
                 ; 0000 0304 {cek_sensor();
                 ; 0000 0305 maju(kec1,kec1);
                 ; 0000 0306 }
                 ; 0000 0307 while ((sensor & 0b0011100)==0b0011100)
                 ; 0000 0308 {    cek_sensor();
                 ; 0000 0309 lampu=0;
                 ; 0000 030A maju(kec1,kec1);
                 ; 0000 030B if ((sensor & 0b0011100)!=0b0011100) {
                 ; 0000 030C hitung++;
                 ; 0000 030D lampu=1;
                 ; 0000 030E };
                 ; 0000 030F }
                 ; 0000 0310 };
                 ; 0000 0311 hitung=0;
                 ; 0000 0312 }
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0319 {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
0004e7 93aa      	ST   -Y,R26
0004e8 93ea      	ST   -Y,R30
0004e9 b7ef      	IN   R30,SREG
0004ea 93ea      	ST   -Y,R30
                 ; 0000 031A TCNT0=0x96; //BE
0004eb e9e6      	LDI  R30,LOW(150)
0004ec bfe2      	OUT  0x32,R30
                 ; 0000 031B a++;
0004ed 91e0 0194 	LDS  R30,_a
0004ef 5fef      	SUBI R30,-LOW(1)
0004f0 93e0 0194 	STS  _a,R30
                 ; 0000 031C if    (a<=pos_servo1)      {servo1=0;}
0004f2 91e0 0192 	LDS  R30,_pos_servo1
0004f4 91a0 0194 	LDS  R26,_a
0004f6 17ea      	CP   R30,R26
0004f7 f010      	BRLO _0x114
0004f8 98ae      	CBI  0x15,6
                 ; 0000 031D else                      {servo1=1; }
0004f9 c001      	RJMP _0x117
                 _0x114:
0004fa 9aae      	SBI  0x15,6
                 _0x117:
                 ; 0000 031E if    (a<=pos_servo2)      {servo2=0;}
0004fb 91e0 0193 	LDS  R30,_pos_servo2
0004fd 91a0 0194 	LDS  R26,_a
0004ff 17ea      	CP   R30,R26
000500 f010      	BRLO _0x11A
000501 98af      	CBI  0x15,7
                 ; 0000 031F else                      {servo2=1; }
000502 c001      	RJMP _0x11D
                 _0x11A:
000503 9aaf      	SBI  0x15,7
                 _0x11D:
                 ; 0000 0320 
                 ; 0000 0321 }
000504 91e9      	LD   R30,Y+
000505 bfef      	OUT  SREG,R30
000506 91e9      	LD   R30,Y+
000507 91a9      	LD   R26,Y+
000508 9518      	RETI
                 ; .FEND
                 ;int bacawarna()
                 ; 0000 0323 {
                 _bacawarna:
                 ; .FSTART _bacawarna
                 ; 0000 0324 nilai_warna=read_adc(7);
000509 e0a7      	LDI  R26,LOW(7)
00050a dc04      	RCALL _read_adc
00050b 2eae      	MOV  R10,R30
00050c 24bb      	CLR  R11
                 ; 0000 0325 lcd_gotoxy(0,1);
00050d e0e0      	LDI  R30,LOW(0)
00050e 93ea      	ST   -Y,R30
00050f e0a1      	LDI  R26,LOW(1)
000510 940e 093b 	CALL _lcd_gotoxy
                 ; 0000 0326 sprintf(buff,"%d   ",nadc7);
000512 e6ee      	LDI  R30,LOW(_buff)
000513 e0f1      	LDI  R31,HIGH(_buff)
000514 93fa      	ST   -Y,R31
000515 93ea      	ST   -Y,R30
                +
000516 e0ee     +LDI R30 , LOW ( 2 * _0x0 + ( 136 ) )
000517 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 136 ) )
                 	__POINTW1FN _0x0,136
000518 93fa      	ST   -Y,R31
000519 93ea      	ST   -Y,R30
00051a 01f4      	MOVW R30,R8
00051b 2766      	CLR  R22
00051c 2777      	CLR  R23
00051d 940e 0b6f 	CALL SUBOPT_0x3A
                 ; 0000 0327 lcd_puts(buff);
                 ; 0000 0328 delay_ms(100);
00051f 940e 0ac3 	CALL SUBOPT_0x1E
                 ; 0000 0329 
                 ; 0000 032A if(nilai_warna>=lowK &&  nilai_warna<=highK){
000521 91e0 0162 	LDS  R30,_lowK
000523 91f0 0163 	LDS  R31,_lowK+1
000525 16ae      	CP   R10,R30
000526 06bf      	CPC  R11,R31
000527 f038      	BRLO _0x121
000528 91e0 0164 	LDS  R30,_highK
00052a 91f0 0165 	LDS  R31,_highK+1
00052c 15ea      	CP   R30,R10
00052d 05fb      	CPC  R31,R11
00052e f408      	BRSH _0x122
                 _0x121:
00052f c008      	RJMP _0x120
                 _0x122:
                 ; 0000 032B lcd_gotoxy(0,0);lcd_putsf("KUNING   ");
000530 940e 0aa5 	CALL SUBOPT_0x19
                +
000532 e1a4     +LDI R26 , LOW ( 2 * _0x0 + ( 142 ) )
000533 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 142 ) )
                 	__POINTW2FN _0x0,142
000534 940e 099a 	CALL _lcd_putsf
                 ; 0000 032C hasilwarna='K';
000536 e4eb      	LDI  R30,LOW(75)
000537 c042      	RJMP _0x19B
                 ; 0000 032D }
                 ; 0000 032E 
                 ; 0000 032F else if(nilai_warna>=lowB &&  nilai_warna<=highB){
                 _0x120:
000538 91e0 016a 	LDS  R30,_lowB
00053a 91f0 016b 	LDS  R31,_lowB+1
00053c 16ae      	CP   R10,R30
00053d 06bf      	CPC  R11,R31
00053e f038      	BRLO _0x125
00053f 91e0 016c 	LDS  R30,_highB
000541 91f0 016d 	LDS  R31,_highB+1
000543 15ea      	CP   R30,R10
000544 05fb      	CPC  R31,R11
000545 f408      	BRSH _0x126
                 _0x125:
000546 c008      	RJMP _0x124
                 _0x126:
                 ; 0000 0330 lcd_gotoxy(0,0);lcd_putsf("BIRU     ");
000547 940e 0aa5 	CALL SUBOPT_0x19
                +
000549 e1ae     +LDI R26 , LOW ( 2 * _0x0 + ( 152 ) )
00054a e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 152 ) )
                 	__POINTW2FN _0x0,152
00054b 940e 099a 	CALL _lcd_putsf
                 ; 0000 0331 hasilwarna='B';
00054d e4e2      	LDI  R30,LOW(66)
00054e c02b      	RJMP _0x19B
                 ; 0000 0332 }
                 ; 0000 0333 
                 ; 0000 0334 else if(nilai_warna>=lowM &&  nilai_warna<=highM){
                 _0x124:
                +
00054f 14ac     +CP R10 , R12
000550 04bd     +CPC R11 , R13
                 	__CPWRR 10,11,12,13
000551 f038      	BRLO _0x129
000552 91e0 0160 	LDS  R30,_highM
000554 91f0 0161 	LDS  R31,_highM+1
000556 15ea      	CP   R30,R10
000557 05fb      	CPC  R31,R11
000558 f408      	BRSH _0x12A
                 _0x129:
000559 c008      	RJMP _0x128
                 _0x12A:
                 ; 0000 0335 lcd_gotoxy(0,0);lcd_putsf("MERAH    ");
00055a 940e 0aa5 	CALL SUBOPT_0x19
                +
00055c e2a8     +LDI R26 , LOW ( 2 * _0x0 + ( 162 ) )
00055d e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 162 ) )
                 	__POINTW2FN _0x0,162
00055e 940e 099a 	CALL _lcd_putsf
                 ; 0000 0336 hasilwarna='M';
000560 e4ed      	LDI  R30,LOW(77)
000561 c018      	RJMP _0x19B
                 ; 0000 0337 }
                 ; 0000 0338 
                 ; 0000 0339 else if(nilai_warna>=lowH &&  nilai_warna<=highH){
                 _0x128:
000562 91e0 0166 	LDS  R30,_lowH
000564 91f0 0167 	LDS  R31,_lowH+1
000566 16ae      	CP   R10,R30
000567 06bf      	CPC  R11,R31
000568 f038      	BRLO _0x12D
000569 91e0 0168 	LDS  R30,_highH
00056b 91f0 0169 	LDS  R31,_highH+1
00056d 15ea      	CP   R30,R10
00056e 05fb      	CPC  R31,R11
00056f f408      	BRSH _0x12E
                 _0x12D:
000570 c008      	RJMP _0x12C
                 _0x12E:
                 ; 0000 033A lcd_gotoxy(0,0);lcd_putsf("HIJAU    ");
000571 940e 0aa5 	CALL SUBOPT_0x19
                +
000573 e3a2     +LDI R26 , LOW ( 2 * _0x0 + ( 172 ) )
000574 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 172 ) )
                 	__POINTW2FN _0x0,172
000575 940e 099a 	CALL _lcd_putsf
                 ; 0000 033B hasilwarna='H';
000577 e4e8      	LDI  R30,LOW(72)
000578 c001      	RJMP _0x19B
                 ; 0000 033C }
                 ; 0000 033D else { hasilwarna='X';}
                 _0x12C:
000579 e5e8      	LDI  R30,LOW(88)
                 _0x19B:
00057a 93e0 018f 	STS  _hasilwarna,R30
                 ; 0000 033E return(hasilwarna);
00057c e0f0      	LDI  R31,0
00057d 9508      	RET
                 ; 0000 033F }
                 ; .FEND
                 ;void scantime(int waktu,int kec1)
                 ; 0000 0341 {      cek_sensor();
                 ;	waktu -> Y+2
                 ;	kec1 -> Y+0
                 ; 0000 0342 
                 ; 0000 0343 while (hitung<waktu) {
                 ; 0000 0344 scan(kec1);
                 ; 0000 0345 hitung++;
                 ; 0000 0346 delay_ms(10);
                 ; 0000 0347 }
                 ; 0000 0348 hitung=0;
                 ; 0000 0349 }
                 ;interrupt [TIM0_COMP] void timer0_comp_isr(void)
                 ; 0000 034C {
                 _timer0_comp_isr:
                 ; .FSTART _timer0_comp_isr
                 ; 0000 034D // Place your code here
                 ; 0000 034E }
00057e 9518      	RETI
                 ; .FEND
                 ;void main(void)
                 ; 0000 0350 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0351 // Declare your local variables here
                 ; 0000 0352 
                 ; 0000 0353 // Input/Output Ports initialization
                 ; 0000 0354 // Port A initialization
                 ; 0000 0355 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0356 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0357 PORTA=0x00;
00057f e0e0      	LDI  R30,LOW(0)
000580 bbeb      	OUT  0x1B,R30
                 ; 0000 0358 DDRA=0x00;
000581 bbea      	OUT  0x1A,R30
                 ; 0000 0359 
                 ; 0000 035A // Port B initialization
                 ; 0000 035B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 035C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 035D PORTB=0x08;
000582 e0e8      	LDI  R30,LOW(8)
000583 bbe8      	OUT  0x18,R30
                 ; 0000 035E DDRB=0Xff;//0x08;
000584 efef      	LDI  R30,LOW(255)
000585 bbe7      	OUT  0x17,R30
                 ; 0000 035F 
                 ; 0000 0360 // Port C initialization
                 ; 0000 0361 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0362 // State7=T State6=T State5=T State4=T State3=P State2=P State1=P State0=P
                 ; 0000 0363 PORTC=0xFF;
000586 bbe5      	OUT  0x15,R30
                 ; 0000 0364 DDRC=0xF0; //C0
000587 efe0      	LDI  R30,LOW(240)
000588 bbe4      	OUT  0x14,R30
                 ; 0000 0365 
                 ; 0000 0366 // Port D initialization
                 ; 0000 0367 // Func7=In Func6=In Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0368 // State7=T State6=T State5=0 State4=0 State3=T State2=T State1=T State0=T
                 ; 0000 0369 PORTD=0x01;
000589 e0e1      	LDI  R30,LOW(1)
00058a bbe2      	OUT  0x12,R30
                 ; 0000 036A DDRD=0xFE; //3F
00058b efee      	LDI  R30,LOW(254)
00058c bbe1      	OUT  0x11,R30
                 ; 0000 036B 
                 ; 0000 036C // Timer/Counter 0 initialization
                 ; 0000 036D TCCR0=0x4A;
00058d e4ea      	LDI  R30,LOW(74)
00058e bfe3      	OUT  0x33,R30
                 ; 0000 036E TCNT0=0x96;
00058f e9e6      	LDI  R30,LOW(150)
000590 bfe2      	OUT  0x32,R30
                 ; 0000 036F OCR0=0x00;
000591 e0e0      	LDI  R30,LOW(0)
000592 bfec      	OUT  0x3C,R30
                 ; 0000 0370 
                 ; 0000 0371 // Timer/Counter 1 initialization
                 ; 0000 0372 TCCR1A=0xA1;
000593 eae1      	LDI  R30,LOW(161)
000594 bdef      	OUT  0x2F,R30
                 ; 0000 0373 TCCR1B=0x09;
000595 e0e9      	LDI  R30,LOW(9)
000596 bdee      	OUT  0x2E,R30
                 ; 0000 0374 TCNT1H=0x00;
000597 e0e0      	LDI  R30,LOW(0)
000598 bded      	OUT  0x2D,R30
                 ; 0000 0375 TCNT1L=0x00;
000599 bdec      	OUT  0x2C,R30
                 ; 0000 0376 ICR1H=0x00;
00059a bde7      	OUT  0x27,R30
                 ; 0000 0377 ICR1L=0x00;
00059b bde6      	OUT  0x26,R30
                 ; 0000 0378 OCR1AH=0x00;
00059c bdeb      	OUT  0x2B,R30
                 ; 0000 0379 OCR1AL=0x00;
00059d bdea      	OUT  0x2A,R30
                 ; 0000 037A OCR1BH=0x00;
00059e bde9      	OUT  0x29,R30
                 ; 0000 037B OCR1BL=0x00;
00059f bde8      	OUT  0x28,R30
                 ; 0000 037C 
                 ; 0000 037D // Timer/Counter 2 initialization
                 ; 0000 037E // Clock source: System Clock
                 ; 0000 037F // Clock value: Timer 2 Stopped
                 ; 0000 0380 // Mode: Normal top=FFh
                 ; 0000 0381 // OC2 output: Disconnected
                 ; 0000 0382 ASSR=0x00;
0005a0 bde2      	OUT  0x22,R30
                 ; 0000 0383 TCCR2=0x00;
0005a1 bde5      	OUT  0x25,R30
                 ; 0000 0384 TCNT2=0x00;
0005a2 bde4      	OUT  0x24,R30
                 ; 0000 0385 OCR2=0x00;
0005a3 bde3      	OUT  0x23,R30
                 ; 0000 0386 
                 ; 0000 0387 // External Interrupt(s) initialization
                 ; 0000 0388 // INT0: Off
                 ; 0000 0389 // INT1: Off
                 ; 0000 038A // INT2: Off
                 ; 0000 038B MCUCR=0x00;
0005a4 bfe5      	OUT  0x35,R30
                 ; 0000 038C MCUCSR=0x00;
0005a5 bfe4      	OUT  0x34,R30
                 ; 0000 038D 
                 ; 0000 038E // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 038F TIMSK=0x03;
0005a6 e0e3      	LDI  R30,LOW(3)
0005a7 bfe9      	OUT  0x39,R30
                 ; 0000 0390 
                 ; 0000 0391 // Analog Comparator initialization
                 ; 0000 0392 // Analog Comparator: Off
                 ; 0000 0393 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0394 ACSR=0x80;
0005a8 e8e0      	LDI  R30,LOW(128)
0005a9 b9e8      	OUT  0x8,R30
                 ; 0000 0395 SFIOR=0x00;
0005aa e0e0      	LDI  R30,LOW(0)
0005ab bfe0      	OUT  0x30,R30
                 ; 0000 0396 
                 ; 0000 0397 
                 ; 0000 0398 
                 ; 0000 0399 MCUCR=0x00;
0005ac bfe5      	OUT  0x35,R30
                 ; 0000 039A MCUCSR=0x00;
0005ad bfe4      	OUT  0x34,R30
                 ; 0000 039B 
                 ; 0000 039C ////USART, UNTUK KOMUNIKASI BLUETOOTH
                 ; 0000 039D //UCSRA=0x00;
                 ; 0000 039E //UCSRB=0x18;
                 ; 0000 039F //UCSRC=0x86;
                 ; 0000 03A0 //UBRRH=0x00;
                 ; 0000 03A1 //UBRRL=0x47;
                 ; 0000 03A2 // USART initialization
                 ; 0000 03A3 // USART disabled
                 ; 0000 03A4 UCSRB=0x00;
0005ae b9ea      	OUT  0xA,R30
                 ; 0000 03A5 
                 ; 0000 03A6 // ADC initialization
                 ; 0000 03A7 // ADC Clock frequency: 691.200 kHz
                 ; 0000 03A8 // ADC Voltage Reference: AVCC pin
                 ; 0000 03A9 // ADC Auto Trigger Source: None
                 ; 0000 03AA // Only the 8 most significant bits of
                 ; 0000 03AB // the AD conversion result are used
                 ; 0000 03AC ADMUX=ADC_VREF_TYPE & 0xff;
0005af e6e0      	LDI  R30,LOW(96)
0005b0 b9e7      	OUT  0x7,R30
                 ; 0000 03AD ADCSRA=0x84;
0005b1 e8e4      	LDI  R30,LOW(132)
0005b2 b9e6      	OUT  0x6,R30
                 ; 0000 03AE //ADCSRA=0xA6;
                 ; 0000 03AF SFIOR&=0x1F;
0005b3 b7e0      	IN   R30,0x30
0005b4 71ef      	ANDI R30,LOW(0x1F)
0005b5 bfe0      	OUT  0x30,R30
                 ; 0000 03B0 
                 ; 0000 03B1 // LCD module initialization
                 ; 0000 03B2 lcd_init(16); //
0005b6 e1a0      	LDI  R26,LOW(16)
0005b7 940e 09be 	CALL _lcd_init
                 ; 0000 03B3 lcd_clear();//
0005b9 940e 094f 	CALL _lcd_clear
                 ; 0000 03B4 lampu=0;    //
0005bb 98c3      	CBI  0x18,3
                 ; 0000 03B5 //k,b
                 ; 0000 03B6 lcd_gotoxy(0,0);
0005bc 940e 0aa5 	CALL SUBOPT_0x19
                 ; 0000 03B7 lcd_putsf("FF OnlineShop");
                +
0005be e3ac     +LDI R26 , LOW ( 2 * _0x0 + ( 182 ) )
0005bf e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 182 ) )
                 	__POINTW2FN _0x0,182
0005c0 940e 099a 	CALL _lcd_putsf
                 ; 0000 03B8 lcd_gotoxy(0,1);
0005c2 e0e0      	LDI  R30,LOW(0)
0005c3 93ea      	ST   -Y,R30
0005c4 e0a1      	LDI  R26,LOW(1)
0005c5 940e 093b 	CALL _lcd_gotoxy
                 ; 0000 03B9 lcd_putsf("Robot ATMega16A");
                +
0005c7 e4aa     +LDI R26 , LOW ( 2 * _0x0 + ( 196 ) )
0005c8 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 196 ) )
                 	__POINTW2FN _0x0,196
0005c9 940e 099a 	CALL _lcd_putsf
                 ; 0000 03BA delay_ms(1000);
0005cb eea8      	LDI  R26,LOW(1000)
0005cc e0b3      	LDI  R27,HIGH(1000)
0005cd 940e 0c28 	CALL _delay_ms
                 ; 0000 03BB lcd_clear();
0005cf 940e 094f 	CALL _lcd_clear
                 ; 0000 03BC 
                 ; 0000 03BD 
                 ; 0000 03BE // PROGRAM UTAMA
                 ; 0000 03BF // Global enable interrupts
                 ; 0000 03C0 #asm("sei")
0005d1 9478      	SEI
                 ; 0000 03C1 if(t1==0)
0005d2 9998      	SBIC 0x13,0
0005d3 c019      	RJMP _0x135
                 ; 0000 03C2 {    scan_garis(10); delay_ms(1500); maju(160,160); delay_ms(200); rem(100);
0005d4 e0aa      	LDI  R26,LOW(10)
0005d5 e0b0      	LDI  R27,0
0005d6 dc56      	RCALL _scan_garis
0005d7 edac      	LDI  R26,LOW(1500)
0005d8 e0b5      	LDI  R27,HIGH(1500)
0005d9 940e 0c28 	CALL _delay_ms
0005db eae0      	LDI  R30,LOW(160)
0005dc 93ea      	ST   -Y,R30
0005dd eaa0      	LDI  R26,LOW(160)
0005de dc32      	RCALL _maju
0005df eca8      	LDI  R26,LOW(200)
0005e0 e0b0      	LDI  R27,0
0005e1 940e 0c28 	CALL _delay_ms
0005e3 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 03C3 scan_back(10); hit_tengah(10); lcd_clear();
0005e5 e0aa      	LDI  R26,LOW(10)
0005e6 e0b0      	LDI  R27,0
0005e7 dc6d      	RCALL _scan_back
0005e8 e0aa      	LDI  R26,LOW(10)
0005e9 e0b0      	LDI  R27,0
0005ea dc92      	RCALL _hit_tengah
0005eb 940e 094f 	CALL _lcd_clear
                 ; 0000 03C4 }
                 ; 0000 03C5 lengan_atas;
                 _0x135:
0005ed eee2      	LDI  R30,LOW(226)
0005ee 93e0 0193 	STS  _pos_servo2,R30
                 ; 0000 03C6 capit_lepas;
0005f0 efe3      	LDI  R30,LOW(243)
0005f1 93e0 0192 	STS  _pos_servo1,R30
                 ; 0000 03C7 
                 ; 0000 03C8 while (1)
                 _0x136:
                 ; 0000 03C9 {
                 ; 0000 03CA 
                 ; 0000 03CB 
                 ; 0000 03CC if(t1==0)
0005f3 9998      	SBIC 0x13,0
0005f4 c02a      	RJMP _0x139
                 ; 0000 03CD {
                 ; 0000 03CE ///PORGRAM TES BACA WARNA
                 ; 0000 03CF lengan_bawah;
0005f5 efe7      	LDI  R30,LOW(247)
0005f6 93e0 0193 	STS  _pos_servo2,R30
                 ; 0000 03D0 while(1){
                 _0x13A:
                 ; 0000 03D1 bacawarna();
0005f8 df10      	RCALL _bacawarna
                 ; 0000 03D2 if(hasilwarna=='K'){
0005f9 91a0 018f 	LDS  R26,_hasilwarna
0005fb 34ab      	CPI  R26,LOW(0x4B)
0005fc f429      	BRNE _0x13D
                 ; 0000 03D3 lcd_gotoxy(0,0);lcd_putsf("KUNING   ");
0005fd 940e 0aa5 	CALL SUBOPT_0x19
                +
0005ff e1a4     +LDI R26 , LOW ( 2 * _0x0 + ( 142 ) )
000600 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 142 ) )
                 	__POINTW2FN _0x0,142
000601 c01a      	RJMP _0x19C
                 ; 0000 03D4 
                 ; 0000 03D5 }
                 ; 0000 03D6 
                 ; 0000 03D7 else if(hasilwarna=='B'){
                 _0x13D:
000602 91a0 018f 	LDS  R26,_hasilwarna
000604 34a2      	CPI  R26,LOW(0x42)
000605 f429      	BRNE _0x13F
                 ; 0000 03D8 lcd_gotoxy(0,0);lcd_putsf("BIRU     ");
000606 940e 0aa5 	CALL SUBOPT_0x19
                +
000608 e1ae     +LDI R26 , LOW ( 2 * _0x0 + ( 152 ) )
000609 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 152 ) )
                 	__POINTW2FN _0x0,152
00060a c011      	RJMP _0x19C
                 ; 0000 03D9 //progam biru
                 ; 0000 03DA }
                 ; 0000 03DB 
                 ; 0000 03DC else if(hasilwarna=='M'){
                 _0x13F:
00060b 91a0 018f 	LDS  R26,_hasilwarna
00060d 34ad      	CPI  R26,LOW(0x4D)
00060e f429      	BRNE _0x141
                 ; 0000 03DD lcd_gotoxy(0,0);lcd_putsf("MERAH    ");
00060f 940e 0aa5 	CALL SUBOPT_0x19
                +
000611 e2a8     +LDI R26 , LOW ( 2 * _0x0 + ( 162 ) )
000612 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 162 ) )
                 	__POINTW2FN _0x0,162
000613 c008      	RJMP _0x19C
                 ; 0000 03DE //progam merah
                 ; 0000 03DF }
                 ; 0000 03E0 
                 ; 0000 03E1 else if(hasilwarna=='H'){
                 _0x141:
000614 91a0 018f 	LDS  R26,_hasilwarna
000616 34a8      	CPI  R26,LOW(0x48)
000617 f431      	BRNE _0x143
                 ; 0000 03E2 lcd_gotoxy(0,0);lcd_putsf("HIJAU    ");
000618 940e 0aa5 	CALL SUBOPT_0x19
                +
00061a e3a2     +LDI R26 , LOW ( 2 * _0x0 + ( 172 ) )
00061b e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 172 ) )
                 	__POINTW2FN _0x0,172
                 _0x19C:
00061c 940e 099a 	CALL _lcd_putsf
                 ; 0000 03E3 //progam hijau
                 ; 0000 03E4 }
                 ; 0000 03E5 }
                 _0x143:
00061e cfd9      	RJMP _0x13A
                 ; 0000 03E6 
                 ; 0000 03E7 
                 ; 0000 03E8 
                 ; 0000 03E9 }
                 ; 0000 03EA 
                 ; 0000 03EB if(t2==0)
                 _0x139:
00061f 9999      	SBIC 0x13,1
000620 c01e      	RJMP _0x144
                 ; 0000 03EC { mulai=mulai+1; delay_ms(200); lampu=0;
000621 01f3      	MOVW R30,R6
000622 9631      	ADIW R30,1
000623 013f      	MOVW R6,R30
000624 eca8      	LDI  R26,LOW(200)
000625 e0b0      	LDI  R27,0
000626 940e 0c28 	CALL _delay_ms
000628 98c3      	CBI  0x18,3
                 ; 0000 03ED lcd_gotoxy(0,0);lcd_putsf("mulai cek point:");
000629 940e 0aa5 	CALL SUBOPT_0x19
                +
00062b e5aa     +LDI R26 , LOW ( 2 * _0x0 + ( 212 ) )
00062c e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 212 ) )
                 	__POINTW2FN _0x0,212
00062d 940e 0aaa 	CALL SUBOPT_0x1A
                 ; 0000 03EE lcd_gotoxy(0,1); sprintf(buff,"%d  ",mulai); lcd_puts(buff);
                +
00062f ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 50 ) )
000630 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 50 ) )
                 	__POINTW1FN _0x0,50
000631 93fa      	ST   -Y,R31
000632 93ea      	ST   -Y,R30
000633 01f3      	MOVW R30,R6
000634 940e 0bc7 	CALL __CWD1
000636 940e 0b6f 	CALL SUBOPT_0x3A
                 ; 0000 03EF if (mulai>=20)mulai=0;}
000638 e1e4      	LDI  R30,LOW(20)
000639 e0f0      	LDI  R31,HIGH(20)
00063a 166e      	CP   R6,R30
00063b 067f      	CPC  R7,R31
00063c f014      	BRLT _0x147
00063d 2466      	CLR  R6
00063e 2477      	CLR  R7
                 _0x147:
                 ; 0000 03F0 
                 ; 0000 03F1 if(t3==0)
                 _0x144:
00063f 999a      	SBIC 0x13,2
000640 c073      	RJMP _0x148
                 ; 0000 03F2 {  lcd_clear(); lampu=1;
000641 940e 094f 	CALL _lcd_clear
000643 9ac3      	SBI  0x18,3
                 ; 0000 03F3 while(1)
                 _0x14B:
                 ; 0000 03F4 {   switch(mulai)
000644 01f3      	MOVW R30,R6
                 ; 0000 03F5 {
                 ; 0000 03F6 case 1: goto satu3; break;
000645 30e1      	CPI  R30,LOW(0x1)
000646 e0a0      	LDI  R26,HIGH(0x1)
000647 07fa      	CPC  R31,R26
000648 f161      	BREQ _0x152
                 ; 0000 03F7 case 2: goto dua3; break;
000649 30e2      	CPI  R30,LOW(0x2)
00064a e0a0      	LDI  R26,HIGH(0x2)
00064b 07fa      	CPC  R31,R26
00064c f409      	BRNE _0x153
00064d c065      	RJMP _0x154
                 ; 0000 03F8 case 3: goto tiga3; break;
                 _0x153:
00064e 30e3      	CPI  R30,LOW(0x3)
00064f e0a0      	LDI  R26,HIGH(0x3)
000650 07fa      	CPC  R31,R26
000651 f409      	BRNE _0x155
000652 c060      	RJMP _0x156
                 ; 0000 03F9 case 4: goto empat3; break;
                 _0x155:
000653 30e4      	CPI  R30,LOW(0x4)
000654 e0a0      	LDI  R26,HIGH(0x4)
000655 07fa      	CPC  R31,R26
000656 f409      	BRNE _0x157
000657 c05b      	RJMP _0x158
                 ; 0000 03FA case 5: goto lima3; break;
                 _0x157:
000658 30e5      	CPI  R30,LOW(0x5)
000659 e0a0      	LDI  R26,HIGH(0x5)
00065a 07fa      	CPC  R31,R26
00065b f409      	BRNE _0x159
00065c c056      	RJMP _0x15A
                 ; 0000 03FB case 6: goto enam3; break;
                 _0x159:
00065d 30e6      	CPI  R30,LOW(0x6)
00065e e0a0      	LDI  R26,HIGH(0x6)
00065f 07fa      	CPC  R31,R26
000660 f409      	BRNE _0x15B
000661 c051      	RJMP _0x15C
                 ; 0000 03FC case 7: goto tujuh3; break;
                 _0x15B:
000662 30e7      	CPI  R30,LOW(0x7)
000663 e0a0      	LDI  R26,HIGH(0x7)
000664 07fa      	CPC  R31,R26
000665 f409      	BRNE _0x15D
000666 c04c      	RJMP _0x15E
                 ; 0000 03FD case 8: goto delapan3; break;
                 _0x15D:
000667 30e8      	CPI  R30,LOW(0x8)
000668 e0a0      	LDI  R26,HIGH(0x8)
000669 07fa      	CPC  R31,R26
00066a f409      	BRNE _0x15F
00066b c047      	RJMP _0x160
                 ; 0000 03FE case 9: goto sembilan3; break;
                 _0x15F:
00066c 30e9      	CPI  R30,LOW(0x9)
00066d e0a0      	LDI  R26,HIGH(0x9)
00066e 07fa      	CPC  R31,R26
00066f f409      	BRNE _0x161
000670 c042      	RJMP _0x162
                 ; 0000 03FF case 10: goto sepuluh3; break;
                 _0x161:
000671 30ea      	CPI  R30,LOW(0xA)
000672 e0a0      	LDI  R26,HIGH(0xA)
000673 07fa      	CPC  R31,R26
000674 f1f1      	BREQ _0x164
                 ; 0000 0400 }
                 ; 0000 0401 
                 ; 0000 0402 
                 ; 0000 0403 satu3:
                 _0x152:
                 ; 0000 0404 scanX(1, 180);
000675 940e 09fe 	CALL SUBOPT_0x2
000677 940e 0b76 	CALL SUBOPT_0x3B
                 ; 0000 0405 rem(1000);
                 ; 0000 0406 belki(170,170);
000679 940e 0b7f 	CALL SUBOPT_0x3C
                 ; 0000 0407 rem(1000);
                 ; 0000 0408 scanX(5, 180);
00067b e0e5      	LDI  R30,LOW(5)
00067c e0f0      	LDI  R31,HIGH(5)
00067d 93fa      	ST   -Y,R31
00067e 93ea      	ST   -Y,R30
00067f 940e 0b76 	CALL SUBOPT_0x3B
                 ; 0000 0409 rem(1000);
                 ; 0000 040A belka(170,170);
000681 940e 0b85 	CALL SUBOPT_0x3D
                 ; 0000 040B rem(1000);
                 ; 0000 040C scanX(5, 180);
000683 e0e5      	LDI  R30,LOW(5)
000684 e0f0      	LDI  R31,HIGH(5)
000685 93fa      	ST   -Y,R31
000686 93ea      	ST   -Y,R30
000687 eba4      	LDI  R26,LOW(180)
000688 e0b0      	LDI  R27,0
000689 dadf      	RCALL _scanX
                 ; 0000 040D rem(1000);
00068a eea8      	LDI  R26,LOW(1000)
00068b e0b3      	LDI  R27,HIGH(1000)
00068c daf4      	RCALL _rem
                 ; 0000 040E mundur(150,1000);
00068d e9e6      	LDI  R30,LOW(150)
00068e 93ea      	ST   -Y,R30
00068f eea8      	LDI  R26,LOW(232)
000690 db87      	RCALL _mundur
                 ; 0000 040F belka(170,170);
000691 940e 0a23 	CALL SUBOPT_0x6
000693 940e 0b85 	CALL SUBOPT_0x3D
                 ; 0000 0410 rem(1000);
                 ; 0000 0411 scanX(3, 180);
000695 940e 0a07 	CALL SUBOPT_0x4
000697 940e 0b76 	CALL SUBOPT_0x3B
                 ; 0000 0412 rem(1000);
                 ; 0000 0413 belki(170,170);
000699 940e 0b7f 	CALL SUBOPT_0x3C
                 ; 0000 0414 rem(1000);
                 ; 0000 0415 scanX(3, 180);
00069b 940e 0a07 	CALL SUBOPT_0x4
00069d 940e 0b76 	CALL SUBOPT_0x3B
                 ; 0000 0416 rem(1000);
                 ; 0000 0417 belka(170,170);
00069f 940e 0b85 	CALL SUBOPT_0x3D
                 ; 0000 0418 rem(1000);
                 ; 0000 0419 belki(170,170);
0006a1 940e 0a23 	CALL SUBOPT_0x6
0006a3 940e 0b7f 	CALL SUBOPT_0x3C
                 ; 0000 041A rem(1000);
                 ; 0000 041B scanX(2, 180);
0006a5 e0e2      	LDI  R30,LOW(2)
0006a6 e0f0      	LDI  R31,HIGH(2)
0006a7 93fa      	ST   -Y,R31
0006a8 93ea      	ST   -Y,R30
0006a9 940e 0b76 	CALL SUBOPT_0x3B
                 ; 0000 041C rem(1000);
                 ; 0000 041D belka(170,170);
0006ab 940e 0b85 	CALL SUBOPT_0x3D
                 ; 0000 041E rem(1000);
                 ; 0000 041F scanX(1, 100);
0006ad 940e 09fe 	CALL SUBOPT_0x2
0006af e6a4      	LDI  R26,LOW(100)
0006b0 e0b0      	LDI  R27,0
0006b1 dab7      	RCALL _scanX
                 ; 0000 0420 parkir();
0006b2 de30      	RCALL _parkir
                 ; 0000 0421 
                 ; 0000 0422 
                 ; 0000 0423 dua3:
                 _0x154:
                 ; 0000 0424 
                 ; 0000 0425 tiga3:
                 _0x156:
                 ; 0000 0426 
                 ; 0000 0427 empat3:
                 _0x158:
                 ; 0000 0428 
                 ; 0000 0429 lima3:
                 _0x15A:
                 ; 0000 042A 
                 ; 0000 042B enam3:
                 _0x15C:
                 ; 0000 042C 
                 ; 0000 042D tujuh3:
                 _0x15E:
                 ; 0000 042E 
                 ; 0000 042F delapan3:
                 _0x160:
                 ; 0000 0430 
                 ; 0000 0431 sembilan3:
                 _0x162:
                 ; 0000 0432 
                 ; 0000 0433 sepuluh3:
                 _0x164:
                 ; 0000 0434 
                 ; 0000 0435 }
0006b3 cf90      	RJMP _0x14B
                 ; 0000 0436 }
                 ; 0000 0437 
                 ; 0000 0438 if(t4==0)  //start BIRU
                 _0x148:
0006b4 999b      	SBIC 0x13,3
0006b5 c072      	RJMP _0x165
                 ; 0000 0439 {
                 ; 0000 043A 
                 ; 0000 043B lcd_clear(); lampu=1;
0006b6 940e 094f 	CALL _lcd_clear
0006b8 9ac3      	SBI  0x18,3
                 ; 0000 043C while(1)
                 _0x168:
                 ; 0000 043D {   switch(mulai)
0006b9 01f3      	MOVW R30,R6
                 ; 0000 043E {
                 ; 0000 043F case 1: cek_sensor(); goto satu4;  break;
0006ba 30e1      	CPI  R30,LOW(0x1)
0006bb e0a0      	LDI  R26,HIGH(0x1)
0006bc 07fa      	CPC  R31,R26
0006bd f411      	BRNE _0x16E
0006be db10      	RCALL _cek_sensor
0006bf c01e      	RJMP _0x16F
                 ; 0000 0440 case 2: cek_sensor(); goto dua4; break;
                 _0x16E:
0006c0 30e2      	CPI  R30,LOW(0x2)
0006c1 e0a0      	LDI  R26,HIGH(0x2)
0006c2 07fa      	CPC  R31,R26
0006c3 f411      	BRNE _0x170
0006c4 db0a      	RCALL _cek_sensor
0006c5 c03a      	RJMP _0x171
                 ; 0000 0441 case 3: cek_sensor(); goto tiga4;  break;
                 _0x170:
0006c6 30e3      	CPI  R30,LOW(0x3)
0006c7 e0a0      	LDI  R26,HIGH(0x3)
0006c8 07fa      	CPC  R31,R26
0006c9 f411      	BRNE _0x172
0006ca db04      	RCALL _cek_sensor
0006cb c034      	RJMP _0x173
                 ; 0000 0442 case 4: cek_sensor(); goto empat4;  break;
                 _0x172:
0006cc 30e4      	CPI  R30,LOW(0x4)
0006cd e0a0      	LDI  R26,HIGH(0x4)
0006ce 07fa      	CPC  R31,R26
0006cf f411      	BRNE _0x174
0006d0 dafe      	RCALL _cek_sensor
0006d1 c02e      	RJMP _0x175
                 ; 0000 0443 case 5: cek_sensor(); goto lima4;  break;
                 _0x174:
0006d2 30e5      	CPI  R30,LOW(0x5)
0006d3 e0a0      	LDI  R26,HIGH(0x5)
0006d4 07fa      	CPC  R31,R26
0006d5 f411      	BRNE _0x176
0006d6 daf8      	RCALL _cek_sensor
0006d7 c028      	RJMP _0x177
                 ; 0000 0444 case 6: cek_sensor(); goto enam4;  break;
                 _0x176:
0006d8 30e6      	CPI  R30,LOW(0x6)
0006d9 e0a0      	LDI  R26,HIGH(0x6)
0006da 07fa      	CPC  R31,R26
0006db f411      	BRNE _0x16D
0006dc daf2      	RCALL _cek_sensor
0006dd c01b      	RJMP _0x179
                 ; 0000 0445 }
                 _0x16D:
                 ; 0000 0446 
                 ; 0000 0447 satu4:
                 _0x16F:
                 ; 0000 0448 while(1)
                 _0x17A:
                 ; 0000 0449 {
                 ; 0000 044A lampu=0;
0006de 98c3      	CBI  0x18,3
                 ; 0000 044B mundur(190,190);
0006df ebee      	LDI  R30,LOW(190)
0006e0 93ea      	ST   -Y,R30
0006e1 ebae      	LDI  R26,LOW(190)
0006e2 db35      	RCALL _mundur
                 ; 0000 044C delay_ms(300);
0006e3 e2ac      	LDI  R26,LOW(300)
0006e4 e0b1      	LDI  R27,HIGH(300)
0006e5 940e 0c28 	CALL _delay_ms
                 ; 0000 044D scanmundur(195,195);
0006e7 ece3      	LDI  R30,LOW(195)
0006e8 e0f0      	LDI  R31,HIGH(195)
0006e9 93fa      	ST   -Y,R31
0006ea 93ea      	ST   -Y,R30
0006eb eca3      	LDI  R26,LOW(195)
0006ec e0b0      	LDI  R27,0
0006ed dc0e      	RCALL _scanmundur
                 ; 0000 044E belki(160,160);
0006ee 940e 0b28 	CALL SUBOPT_0x2D
                 ; 0000 044F rem(100);
0006f0 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 0450 scanX(1,220);
0006f2 940e 09fe 	CALL SUBOPT_0x2
0006f4 edac      	LDI  R26,LOW(220)
0006f5 e0b0      	LDI  R27,0
0006f6 da72      	RCALL _scanX
                 ; 0000 0451 rem(100);
0006f7 940e 0a2e 	CALL SUBOPT_0x8
                 ; 0000 0452 
                 ; 0000 0453 enam4:
                 _0x179:
                 ; 0000 0454 stepx:
                 ; 0000 0455 ///////////////program misi
                 ; 0000 0456 
                 ; 0000 0457 belki(160,160);
0006f9 940e 0b28 	CALL SUBOPT_0x2D
                 ; 0000 0458 //akhir
                 ; 0000 0459 goto kirimx;
0006fb c00c      	RJMP _0x180
                 ; 0000 045A 
                 ; 0000 045B 
                 ; 0000 045C ///////////////program lain
                 ; 0000 045D stepz:
                 _0x181:
                 ; 0000 045E lcd_kedip(10); parkir();
0006fc e0aa      	LDI  R26,LOW(10)
0006fd e0b0      	LDI  R27,0
0006fe daff      	RCALL _lcd_kedip
0006ff dde3      	RCALL _parkir
                 ; 0000 045F 
                 ; 0000 0460 
                 ; 0000 0461 tiga4:
                 _0x173:
                 ; 0000 0462 
                 ; 0000 0463 
                 ; 0000 0464 lima4:
                 _0x177:
                 ; 0000 0465 
                 ; 0000 0466 
                 ; 0000 0467 
                 ; 0000 0468 
                 ; 0000 0469 dua4:
                 _0x171:
                 ; 0000 046A 
                 ; 0000 046B 
                 ; 0000 046C empat4:
                 _0x175:
                 ; 0000 046D 
                 ; 0000 046E 
                 ; 0000 046F }
000700 cfdd      	RJMP _0x17A
                 ; 0000 0470 
                 ; 0000 0471 nilai_warna=bacawarna();
                 ; 0000 0472 //nilai berikut bukan ketentuan, disesuaikan dengan robot masing-masing
                 ; 0000 0473 //hijau  204
                 ; 0000 0474 //kuning   10
                 ; 0000 0475 //kosong   156
                 ; 0000 0476 //merah   51
                 ; 0000 0477 if(nilai_warna>225 && nilai_warna<235){//jika kuning
                 ; 0000 0478 //program warna kuning
                 ; 0000 0479 
                 ; 0000 047A scanX(1,180);
                 ; 0000 047B rem(500);
                 ; 0000 047C parkir();
                 ; 0000 047D 
                 ; 0000 047E }
                 ; 0000 047F 
                 ; 0000 0480 
                 ; 0000 0481 if(nilai_warna>150 && nilai_warna<160){
                 ; 0000 0482 
                 ; 0000 0483 
                 ; 0000 0484 }
                 ; 0000 0485 
                 ; 0000 0486 
                 ; 0000 0487 if(nilai_warna>5 && nilai_warna<25){  //Jika Hijau
                 ; 0000 0488 //program ketika warna hijau
                 ; 0000 0489 
                 ; 0000 048A }
                 ; 0000 048B 
                 ; 0000 048C 
                 ; 0000 048D 
                 ; 0000 048E while(1){
                 _0x18B:
                 ; 0000 048F scanX(1,150);
000701 940e 09fe 	CALL SUBOPT_0x2
000703 e9a6      	LDI  R26,LOW(150)
000704 e0b0      	LDI  R27,0
000705 da63      	RCALL _scanX
                 ; 0000 0490 parkir();
000706 dddc      	RCALL _parkir
                 ; 0000 0491 }
000707 cff9      	RJMP _0x18B
                 ; 0000 0492 
                 ; 0000 0493 
                 ; 0000 0494 
                 ; 0000 0495 
                 ; 0000 0496 kirimx:
                 _0x180:
                 ; 0000 0497 if(hasilwarna=='K'){
000708 91a0 018f 	LDS  R26,_hasilwarna
00070a 34ab      	CPI  R26,LOW(0x4B)
00070b f411      	BRNE _0x18E
                 ; 0000 0498 arah2kuningkecil();
00070c da22      	RCALL _arah2kuningkecil
                 ; 0000 0499 goto stepz;
00070d cfee      	RJMP _0x181
                 ; 0000 049A }
                 ; 0000 049B 
                 ; 0000 049C else if(hasilwarna=='B'){
                 _0x18E:
00070e 91a0 018f 	LDS  R26,_hasilwarna
000710 34a2      	CPI  R26,LOW(0x42)
000711 f411      	BRNE _0x190
                 ; 0000 049D arah2new();
000712 da45      	RCALL _arah2new
                 ; 0000 049E goto stepz;
000713 cfe8      	RJMP _0x181
                 ; 0000 049F }
                 ; 0000 04A0 
                 ; 0000 04A1 else if(hasilwarna=='M'){
                 _0x190:
000714 91a0 018f 	LDS  R26,_hasilwarna
000716 34ad      	CPI  R26,LOW(0x4D)
000717 f411      	BRNE _0x192
                 ; 0000 04A2 arah2merah();
000718 dc18      	RCALL _arah2merah
                 ; 0000 04A3 goto stepz;
000719 cfe2      	RJMP _0x181
                 ; 0000 04A4 }
                 ; 0000 04A5 
                 ; 0000 04A6 else if(hasilwarna=='H'){
                 _0x192:
00071a 91a0 018f 	LDS  R26,_hasilwarna
00071c 34a8      	CPI  R26,LOW(0x48)
00071d f411      	BRNE _0x194
                 ; 0000 04A7 arah2hijau();
00071e dbec      	RCALL _arah2hijau
                 ; 0000 04A8 goto stepz;
00071f cfdc      	RJMP _0x181
                 ; 0000 04A9 }
                 ; 0000 04AA else if(hasilwarna=='X'){
                 _0x194:
000720 91a0 018f 	LDS  R26,_hasilwarna
000722 35a8      	CPI  R26,LOW(0x58)
000723 f419      	BRNE _0x196
                 ; 0000 04AB bacawarna();  //ulangi
000724 dde4      	RCALL _bacawarna
                 ; 0000 04AC arah2hijau(); //mencoba mengirim barang dengan mendapatkan minimal poin
000725 dbe5      	RCALL _arah2hijau
                 ; 0000 04AD goto stepz;
000726 cfd5      	RJMP _0x181
                 ; 0000 04AE }
                 ; 0000 04AF 
                 ; 0000 04B0 }
                 _0x196:
000727 cf91      	RJMP _0x168
                 ; 0000 04B1 
                 ; 0000 04B2 }
                 ; 0000 04B3 
                 ; 0000 04B4 }
                 _0x165:
000728 ceca      	RJMP _0x136
                 ; 0000 04B5 
                 ; 0000 04B6 }
                 _0x197:
000729 cfff      	RJMP _0x197
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00072a 93ba      	ST   -Y,R27
00072b 93aa      	ST   -Y,R26
00072c 931a      	ST   -Y,R17
00072d 930a      	ST   -Y,R16
00072e 81aa      	LDD  R26,Y+2
00072f 81bb      	LDD  R27,Y+2+1
000730 9612      	ADIW R26,2
000731 940e 0bf2 	CALL __GETW1P
000733 9730      	SBIW R30,0
000734 f159      	BREQ _0x2000010
000735 81aa      	LDD  R26,Y+2
000736 81bb      	LDD  R27,Y+2+1
000737 9614      	ADIW R26,4
000738 940e 0bf2 	CALL __GETW1P
00073a 018f      	MOVW R16,R30
00073b 9730      	SBIW R30,0
00073c f061      	BREQ _0x2000012
                +
00073d 3002     +CPI R16 , LOW ( 2 )
00073e e0e0     +LDI R30 , HIGH ( 2 )
00073f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000740 f098      	BRLO _0x2000013
000741 01f8      	MOVW R30,R16
000742 9731      	SBIW R30,1
000743 018f      	MOVW R16,R30
                +
000744 81aa     +LDD R26 , Y + 2
000745 81bb     +LDD R27 , Y + 2 + 1
000746 9614     +ADIW R26 , 4
000747 93ed     +ST X + , R30
000748 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000749 81aa      	LDD  R26,Y+2
00074a 81bb      	LDD  R27,Y+2+1
00074b 9612      	ADIW R26,2
00074c 91ed      	LD   R30,X+
00074d 91fd      	LD   R31,X+
00074e 9631      	ADIW R30,1
00074f 93fe      	ST   -X,R31
000750 93ee      	ST   -X,R30
000751 9731      	SBIW R30,1
000752 81ac      	LDD  R26,Y+4
000753 83a0      	STD  Z+0,R26
                 _0x2000013:
000754 81aa      	LDD  R26,Y+2
000755 81bb      	LDD  R27,Y+2+1
000756 940e 0bf2 	CALL __GETW1P
000758 23ff      	TST  R31
000759 f02a      	BRMI _0x2000014
00075a 91ed      	LD   R30,X+
00075b 91fd      	LD   R31,X+
00075c 9631      	ADIW R30,1
00075d 93fe      	ST   -X,R31
00075e 93ee      	ST   -X,R30
                 _0x2000014:
00075f c006      	RJMP _0x2000015
                 _0x2000010:
000760 81aa      	LDD  R26,Y+2
000761 81bb      	LDD  R27,Y+2+1
000762 efef      	LDI  R30,LOW(65535)
000763 efff      	LDI  R31,HIGH(65535)
000764 93ed      	ST   X+,R30
000765 93fc      	ST   X,R31
                 _0x2000015:
000766 8119      	LDD  R17,Y+1
000767 8108      	LDD  R16,Y+0
000768 9625      	ADIW R28,5
000769 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
00076a 93ba      	ST   -Y,R27
00076b 93aa      	ST   -Y,R26
00076c 9726      	SBIW R28,6
00076d 940e 0bb1 	CALL __SAVELOCR6
00076f e010      	LDI  R17,0
000770 85ac      	LDD  R26,Y+12
000771 85bd      	LDD  R27,Y+12+1
000772 e0e0      	LDI  R30,LOW(0)
000773 e0f0      	LDI  R31,HIGH(0)
000774 93ed      	ST   X+,R30
000775 93fc      	ST   X,R31
                 _0x2000016:
000776 89ea      	LDD  R30,Y+18
000777 89fb      	LDD  R31,Y+18+1
000778 9631      	ADIW R30,1
000779 8bea      	STD  Y+18,R30
00077a 8bfb      	STD  Y+18+1,R31
00077b 9731      	SBIW R30,1
00077c 91e4      	LPM  R30,Z
00077d 2f2e      	MOV  R18,R30
00077e 30e0      	CPI  R30,0
00077f f409      	BRNE PC+2
000780 c11d      	RJMP _0x2000018
000781 2fe1      	MOV  R30,R17
000782 30e0      	CPI  R30,0
000783 f439      	BRNE _0x200001C
000784 3225      	CPI  R18,37
000785 f411      	BRNE _0x200001D
000786 e011      	LDI  R17,LOW(1)
000787 c002      	RJMP _0x200001E
                 _0x200001D:
000788 940e 0b8b 	CALL SUBOPT_0x3E
                 _0x200001E:
00078a c112      	RJMP _0x200001B
                 _0x200001C:
00078b 30e1      	CPI  R30,LOW(0x1)
00078c f4a9      	BRNE _0x200001F
00078d 3225      	CPI  R18,37
00078e f419      	BRNE _0x2000020
00078f 940e 0b8b 	CALL SUBOPT_0x3E
000791 c10a      	RJMP _0x20000CC
                 _0x2000020:
000792 e012      	LDI  R17,LOW(2)
000793 e040      	LDI  R20,LOW(0)
000794 e000      	LDI  R16,LOW(0)
000795 322d      	CPI  R18,45
000796 f411      	BRNE _0x2000021
000797 e001      	LDI  R16,LOW(1)
000798 c104      	RJMP _0x200001B
                 _0x2000021:
000799 322b      	CPI  R18,43
00079a f411      	BRNE _0x2000022
00079b e24b      	LDI  R20,LOW(43)
00079c c100      	RJMP _0x200001B
                 _0x2000022:
00079d 3220      	CPI  R18,32
00079e f411      	BRNE _0x2000023
00079f e240      	LDI  R20,LOW(32)
0007a0 c0fc      	RJMP _0x200001B
                 _0x2000023:
0007a1 c002      	RJMP _0x2000024
                 _0x200001F:
0007a2 30e2      	CPI  R30,LOW(0x2)
0007a3 f439      	BRNE _0x2000025
                 _0x2000024:
0007a4 e050      	LDI  R21,LOW(0)
0007a5 e013      	LDI  R17,LOW(3)
0007a6 3320      	CPI  R18,48
0007a7 f411      	BRNE _0x2000026
0007a8 6800      	ORI  R16,LOW(128)
0007a9 c0f3      	RJMP _0x200001B
                 _0x2000026:
0007aa c003      	RJMP _0x2000027
                 _0x2000025:
0007ab 30e3      	CPI  R30,LOW(0x3)
0007ac f009      	BREQ PC+2
0007ad c0ef      	RJMP _0x200001B
                 _0x2000027:
0007ae 3320      	CPI  R18,48
0007af f010      	BRLO _0x200002A
0007b0 332a      	CPI  R18,58
0007b1 f008      	BRLO _0x200002B
                 _0x200002A:
0007b2 c007      	RJMP _0x2000029
                 _0x200002B:
0007b3 e0aa      	LDI  R26,LOW(10)
0007b4 9f5a      	MUL  R21,R26
0007b5 2d50      	MOV  R21,R0
0007b6 2fe2      	MOV  R30,R18
0007b7 53e0      	SUBI R30,LOW(48)
0007b8 0f5e      	ADD  R21,R30
0007b9 c0e3      	RJMP _0x200001B
                 _0x2000029:
0007ba 2fe2      	MOV  R30,R18
0007bb 36e3      	CPI  R30,LOW(0x63)
0007bc f449      	BRNE _0x200002F
0007bd 940e 0b92 	CALL SUBOPT_0x3F
0007bf 89e8      	LDD  R30,Y+16
0007c0 89f9      	LDD  R31,Y+16+1
0007c1 81a4      	LDD  R26,Z+4
0007c2 93aa      	ST   -Y,R26
0007c3 940e 0b98 	CALL SUBOPT_0x40
0007c5 c0d6      	RJMP _0x2000030
                 _0x200002F:
0007c6 37e3      	CPI  R30,LOW(0x73)
0007c7 f441      	BRNE _0x2000032
0007c8 940e 0b92 	CALL SUBOPT_0x3F
0007ca 940e 0b9e 	CALL SUBOPT_0x41
0007cc 940e 08e2 	CALL _strlen
0007ce 2f1e      	MOV  R17,R30
0007cf c00a      	RJMP _0x2000033
                 _0x2000032:
0007d0 37e0      	CPI  R30,LOW(0x70)
0007d1 f461      	BRNE _0x2000035
0007d2 940e 0b92 	CALL SUBOPT_0x3F
0007d4 940e 0b9e 	CALL SUBOPT_0x41
0007d6 940e 08ee 	CALL _strlenf
0007d8 2f1e      	MOV  R17,R30
0007d9 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0007da 6002      	ORI  R16,LOW(2)
0007db 770f      	ANDI R16,LOW(127)
0007dc e030      	LDI  R19,LOW(0)
0007dd c03c      	RJMP _0x2000036
                 _0x2000035:
0007de 36e4      	CPI  R30,LOW(0x64)
0007df f011      	BREQ _0x2000039
0007e0 36e9      	CPI  R30,LOW(0x69)
0007e1 f411      	BRNE _0x200003A
                 _0x2000039:
0007e2 6004      	ORI  R16,LOW(4)
0007e3 c002      	RJMP _0x200003B
                 _0x200003A:
0007e4 37e5      	CPI  R30,LOW(0x75)
0007e5 f431      	BRNE _0x200003C
                 _0x200003B:
0007e6 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
0007e7 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0007e8 83ee      	STD  Y+6,R30
0007e9 83ff      	STD  Y+6+1,R31
0007ea e015      	LDI  R17,LOW(5)
0007eb c00c      	RJMP _0x200003D
                 _0x200003C:
0007ec 35e8      	CPI  R30,LOW(0x58)
0007ed f411      	BRNE _0x200003F
0007ee 6008      	ORI  R16,LOW(8)
0007ef c003      	RJMP _0x2000040
                 _0x200003F:
0007f0 37e8      	CPI  R30,LOW(0x78)
0007f1 f009      	BREQ PC+2
0007f2 c0a9      	RJMP _0x2000071
                 _0x2000040:
0007f3 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
0007f4 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0007f5 83ee      	STD  Y+6,R30
0007f6 83ff      	STD  Y+6+1,R31
0007f7 e014      	LDI  R17,LOW(4)
                 _0x200003D:
0007f8 ff02      	SBRS R16,2
0007f9 c017      	RJMP _0x2000042
0007fa 940e 0b92 	CALL SUBOPT_0x3F
0007fc 89a8      	LDD  R26,Y+16
0007fd 89b9      	LDD  R27,Y+16+1
0007fe 9614      	ADIW R26,4
0007ff 91ed      	LD   R30,X+
000800 91fd      	LD   R31,X+
000801 87ea      	STD  Y+10,R30
000802 87fb      	STD  Y+10+1,R31
000803 85ab      	LDD  R26,Y+11
000804 23aa      	TST  R26
000805 f42a      	BRPL _0x2000043
000806 940e 0bc3 	CALL __ANEGW1
000808 87ea      	STD  Y+10,R30
000809 87fb      	STD  Y+10+1,R31
00080a e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00080b 3040      	CPI  R20,0
00080c f011      	BREQ _0x2000044
00080d 5f1f      	SUBI R17,-LOW(1)
00080e c001      	RJMP _0x2000045
                 _0x2000044:
00080f 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000810 c009      	RJMP _0x2000046
                 _0x2000042:
000811 940e 0b92 	CALL SUBOPT_0x3F
000813 89a8      	LDD  R26,Y+16
000814 89b9      	LDD  R27,Y+16+1
000815 9614      	ADIW R26,4
000816 940e 0bf2 	CALL __GETW1P
000818 87ea      	STD  Y+10,R30
000819 87fb      	STD  Y+10+1,R31
                 _0x2000046:
                 _0x2000036:
00081a fd00      	SBRC R16,0
00081b c011      	RJMP _0x2000047
                 _0x2000048:
00081c 1715      	CP   R17,R21
00081d f478      	BRSH _0x200004A
00081e ff07      	SBRS R16,7
00081f c008      	RJMP _0x200004B
000820 ff02      	SBRS R16,2
000821 c004      	RJMP _0x200004C
000822 7f0b      	ANDI R16,LOW(251)
000823 2f24      	MOV  R18,R20
000824 5011      	SUBI R17,LOW(1)
000825 c001      	RJMP _0x200004D
                 _0x200004C:
000826 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000827 c001      	RJMP _0x200004E
                 _0x200004B:
000828 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000829 940e 0b8b 	CALL SUBOPT_0x3E
00082b 5051      	SUBI R21,LOW(1)
00082c cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00082d 2f31      	MOV  R19,R17
00082e ff01      	SBRS R16,1
00082f c017      	RJMP _0x200004F
                 _0x2000050:
000830 3030      	CPI  R19,0
000831 f0a1      	BREQ _0x2000052
000832 ff03      	SBRS R16,3
000833 c006      	RJMP _0x2000053
000834 81ee      	LDD  R30,Y+6
000835 81ff      	LDD  R31,Y+6+1
000836 9125      	LPM  R18,Z+
000837 83ee      	STD  Y+6,R30
000838 83ff      	STD  Y+6+1,R31
000839 c005      	RJMP _0x2000054
                 _0x2000053:
00083a 81ae      	LDD  R26,Y+6
00083b 81bf      	LDD  R27,Y+6+1
00083c 912d      	LD   R18,X+
00083d 83ae      	STD  Y+6,R26
00083e 83bf      	STD  Y+6+1,R27
                 _0x2000054:
00083f 940e 0b8b 	CALL SUBOPT_0x3E
000841 3050      	CPI  R21,0
000842 f009      	BREQ _0x2000055
000843 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000844 5031      	SUBI R19,LOW(1)
000845 cfea      	RJMP _0x2000050
                 _0x2000052:
000846 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000847 e320      	LDI  R18,LOW(48)
000848 81ee      	LDD  R30,Y+6
000849 81ff      	LDD  R31,Y+6+1
00084a 940e 0bf6 	CALL __GETW1PF
00084c 87e8      	STD  Y+8,R30
00084d 87f9      	STD  Y+8+1,R31
00084e 81ee      	LDD  R30,Y+6
00084f 81ff      	LDD  R31,Y+6+1
000850 9632      	ADIW R30,2
000851 83ee      	STD  Y+6,R30
000852 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000853 85e8      	LDD  R30,Y+8
000854 85f9      	LDD  R31,Y+8+1
000855 85aa      	LDD  R26,Y+10
000856 85bb      	LDD  R27,Y+10+1
000857 17ae      	CP   R26,R30
000858 07bf      	CPC  R27,R31
000859 f050      	BRLO _0x200005C
00085a 5f2f      	SUBI R18,-LOW(1)
00085b 85a8      	LDD  R26,Y+8
00085c 85b9      	LDD  R27,Y+8+1
00085d 85ea      	LDD  R30,Y+10
00085e 85fb      	LDD  R31,Y+10+1
00085f 1bea      	SUB  R30,R26
000860 0bfb      	SBC  R31,R27
000861 87ea      	STD  Y+10,R30
000862 87fb      	STD  Y+10+1,R31
000863 cfef      	RJMP _0x200005A
                 _0x200005C:
000864 332a      	CPI  R18,58
000865 f028      	BRLO _0x200005D
000866 ff03      	SBRS R16,3
000867 c002      	RJMP _0x200005E
000868 5f29      	SUBI R18,-LOW(7)
000869 c001      	RJMP _0x200005F
                 _0x200005E:
00086a 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
00086b fd04      	SBRC R16,4
00086c c01a      	RJMP _0x2000061
00086d 3321      	CPI  R18,49
00086e f420      	BRSH _0x2000063
00086f 85a8      	LDD  R26,Y+8
000870 85b9      	LDD  R27,Y+8+1
000871 9711      	SBIW R26,1
000872 f409      	BRNE _0x2000062
                 _0x2000063:
000873 c009      	RJMP _0x20000CD
                 _0x2000062:
000874 1753      	CP   R21,R19
000875 f010      	BRLO _0x2000067
000876 ff00      	SBRS R16,0
000877 c001      	RJMP _0x2000068
                 _0x2000067:
000878 c013      	RJMP _0x2000066
                 _0x2000068:
000879 e220      	LDI  R18,LOW(32)
00087a ff07      	SBRS R16,7
00087b c00b      	RJMP _0x2000069
00087c e320      	LDI  R18,LOW(48)
                 _0x20000CD:
00087d 6100      	ORI  R16,LOW(16)
00087e ff02      	SBRS R16,2
00087f c007      	RJMP _0x200006A
000880 7f0b      	ANDI R16,LOW(251)
000881 934a      	ST   -Y,R20
000882 940e 0b98 	CALL SUBOPT_0x40
000884 3050      	CPI  R21,0
000885 f009      	BREQ _0x200006B
000886 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000887 940e 0b8b 	CALL SUBOPT_0x3E
000889 3050      	CPI  R21,0
00088a f009      	BREQ _0x200006C
00088b 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
00088c 5031      	SUBI R19,LOW(1)
00088d 85a8      	LDD  R26,Y+8
00088e 85b9      	LDD  R27,Y+8+1
00088f 9712      	SBIW R26,2
000890 f008      	BRLO _0x2000059
000891 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000892 ff00      	SBRS R16,0
000893 c008      	RJMP _0x200006D
                 _0x200006E:
000894 3050      	CPI  R21,0
000895 f031      	BREQ _0x2000070
000896 5051      	SUBI R21,LOW(1)
000897 e2e0      	LDI  R30,LOW(32)
000898 93ea      	ST   -Y,R30
000899 940e 0b98 	CALL SUBOPT_0x40
00089b cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
00089c e010      	LDI  R17,LOW(0)
                 _0x200001B:
00089d ced8      	RJMP _0x2000016
                 _0x2000018:
00089e 85ac      	LDD  R26,Y+12
00089f 85bd      	LDD  R27,Y+12+1
0008a0 91ed      	LD   R30,X+
0008a1 91fd      	LD   R31,X+
0008a2 940e 0bb8 	CALL __LOADLOCR6
0008a4 9664      	ADIW R28,20
0008a5 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0008a6 92ff      	PUSH R15
0008a7 2ef8      	MOV  R15,R24
0008a8 9726      	SBIW R28,6
0008a9 940e 0bb3 	CALL __SAVELOCR4
0008ab 01de      	MOVW R26,R28
0008ac 961c      	ADIW R26,12
0008ad 940e 0bbf 	CALL __ADDW2R15
0008af 940e 0bf2 	CALL __GETW1P
0008b1 9730      	SBIW R30,0
0008b2 f419      	BRNE _0x2000072
0008b3 efef      	LDI  R30,LOW(65535)
0008b4 efff      	LDI  R31,HIGH(65535)
0008b5 c027      	RJMP _0x20C0004
                 _0x2000072:
0008b6 01de      	MOVW R26,R28
0008b7 9616      	ADIW R26,6
0008b8 940e 0bbf 	CALL __ADDW2R15
0008ba 018d      	MOVW R16,R26
0008bb 01de      	MOVW R26,R28
0008bc 961c      	ADIW R26,12
0008bd 940e 0bbf 	CALL __ADDW2R15
0008bf 91ed      	LD   R30,X+
0008c0 91fd      	LD   R31,X+
0008c1 83ee      	STD  Y+6,R30
0008c2 83ff      	STD  Y+6+1,R31
0008c3 e0e0      	LDI  R30,LOW(0)
0008c4 87e8      	STD  Y+8,R30
0008c5 87e9      	STD  Y+8+1,R30
0008c6 01de      	MOVW R26,R28
0008c7 961a      	ADIW R26,10
0008c8 940e 0bbf 	CALL __ADDW2R15
0008ca 91ed      	LD   R30,X+
0008cb 91fd      	LD   R31,X+
0008cc 93fa      	ST   -Y,R31
0008cd 93ea      	ST   -Y,R30
0008ce 931a      	ST   -Y,R17
0008cf 930a      	ST   -Y,R16
0008d0 e2ea      	LDI  R30,LOW(_put_buff_G100)
0008d1 e0f7      	LDI  R31,HIGH(_put_buff_G100)
0008d2 93fa      	ST   -Y,R31
0008d3 93ea      	ST   -Y,R30
0008d4 01de      	MOVW R26,R28
0008d5 961a      	ADIW R26,10
0008d6 de93      	RCALL __print_G100
0008d7 019f      	MOVW R18,R30
0008d8 81ae      	LDD  R26,Y+6
0008d9 81bf      	LDD  R27,Y+6+1
0008da e0e0      	LDI  R30,LOW(0)
0008db 93ec      	ST   X,R30
0008dc 01f9      	MOVW R30,R18
                 _0x20C0004:
0008dd 940e 0bba 	CALL __LOADLOCR4
0008df 962a      	ADIW R28,10
0008e0 90ff      	POP  R15
0008e1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0008e2 93ba      	ST   -Y,R27
0008e3 93aa      	ST   -Y,R26
0008e4 91a9          ld   r26,y+
0008e5 91b9          ld   r27,y+
0008e6 27ee          clr  r30
0008e7 27ff          clr  r31
                 strlen0:
0008e8 916d          ld   r22,x+
0008e9 2366          tst  r22
0008ea f011          breq strlen1
0008eb 9631          adiw r30,1
0008ec cffb          rjmp strlen0
                 strlen1:
0008ed 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0008ee 93ba      	ST   -Y,R27
0008ef 93aa      	ST   -Y,R26
0008f0 27aa          clr  r26
0008f1 27bb          clr  r27
0008f2 91e9          ld   r30,y+
0008f3 91f9          ld   r31,y+
                 strlenf0:
0008f4 9005      	lpm  r0,z+
0008f5 2000          tst  r0
0008f6 f011          breq strlenf1
0008f7 9611          adiw r26,1
0008f8 cffb          rjmp strlenf0
                 strlenf1:
0008f9 01fd          movw r30,r26
0008fa 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G103:
                 ; .FSTART __lcd_delay_G103
0008fb e0ff          ldi   r31,15
                 __lcd_delay0:
0008fc 95fa          dec   r31
0008fd f7f1          brne  __lcd_delay0
0008fe 9508      	RET
                 ; .FEND
                 __lcd_ready:
                 ; .FSTART __lcd_ready
0008ff b3a7          in    r26,__lcd_direction
000900 70af          andi  r26,0xf                 ;set as input
000901 bba7          out   __lcd_direction,r26
000902 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
000903 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
000904 dff6      	RCALL __lcd_delay_G103
000905 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000906 dff4      	RCALL __lcd_delay_G103
000907 b3a6          in    r26,__lcd_pin
000908 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000909 dff1      	RCALL __lcd_delay_G103
00090a 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
00090b dfef      	RCALL __lcd_delay_G103
00090c 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
00090d fda7          sbrc  r26,__lcd_busy_flag
00090e cff5          rjmp  __lcd_busy
00090f 9508      	RET
                 ; .FEND
                 __lcd_write_nibble_G103:
                 ; .FSTART __lcd_write_nibble_G103
000910 7fa0          andi  r26,0xf0
000911 2bab          or    r26,r27
000912 bba8          out   __lcd_port,r26          ;write
000913 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000914 940e 08fb 	CALL __lcd_delay_G103
000916 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000917 940e 08fb 	CALL __lcd_delay_G103
000919 9508      	RET
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00091a 93aa      	ST   -Y,R26
00091b 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00091c b3a7          in    r26,__lcd_direction
00091d 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
00091e bba7          out   __lcd_direction,r26
00091f b3b8          in    r27,__lcd_port
000920 70bf          andi  r27,0xf
000921 81a8          ld    r26,y
000922 dfed      	RCALL __lcd_write_nibble_G103
000923 81a8          ld    r26,y
000924 95a2          swap  r26
000925 dfea      	RCALL __lcd_write_nibble_G103
000926 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
000927 940c 09f0 	JMP  _0x20C0001
                 ; .FEND
                 __lcd_read_nibble_G103:
                 ; .FSTART __lcd_read_nibble_G103
000929 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
00092a 940e 08fb 	CALL __lcd_delay_G103
00092c b3e6          in    r30,__lcd_pin           ;read
00092d 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
00092e 940e 08fb 	CALL __lcd_delay_G103
000930 7fe0          andi  r30,0xf0
000931 9508      	RET
                 ; .FEND
                 _lcd_read_byte0_G103:
                 ; .FSTART _lcd_read_byte0_G103
000932 940e 08fb 	CALL __lcd_delay_G103
000934 dff4      	RCALL __lcd_read_nibble_G103
000935 2fae          mov   r26,r30
000936 dff2      	RCALL __lcd_read_nibble_G103
000937 98c1          cbi   __lcd_port,__lcd_rd     ;RD=0
000938 95e2          swap  r30
000939 2bea          or    r30,r26
00093a 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00093b 93aa      	ST   -Y,R26
00093c 940e 08ff 	CALL __lcd_ready
00093e 81e8      	LD   R30,Y
00093f e0f0      	LDI  R31,0
000940 55ec      	SUBI R30,LOW(-__base_y_G103)
000941 4ffe      	SBCI R31,HIGH(-__base_y_G103)
000942 81e0      	LD   R30,Z
000943 81a9      	LDD  R26,Y+1
000944 0fae      	ADD  R26,R30
000945 940e 091a 	CALL __lcd_write_data
000947 81e9      	LDD  R30,Y+1
000948 93e0 01a8 	STS  __lcd_x,R30
00094a 81e8      	LD   R30,Y
00094b 93e0 01a9 	STS  __lcd_y,R30
                 _0x20C0003:
00094d 9622      	ADIW R28,2
00094e 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00094f 940e 08ff 	CALL __lcd_ready
000951 e0a2      	LDI  R26,LOW(2)
000952 940e 091a 	CALL __lcd_write_data
000954 940e 08ff 	CALL __lcd_ready
000956 e0ac      	LDI  R26,LOW(12)
000957 940e 091a 	CALL __lcd_write_data
000959 940e 08ff 	CALL __lcd_ready
00095b e0a1      	LDI  R26,LOW(1)
00095c 940e 091a 	CALL __lcd_write_data
00095e e0e0      	LDI  R30,LOW(0)
00095f 93e0 01a9 	STS  __lcd_y,R30
000961 93e0 01a8 	STS  __lcd_x,R30
000963 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000964 93aa      	ST   -Y,R26
000965 93ef          push r30
000966 93ff          push r31
000967 81a8          ld   r26,y
000968 9468          set
000969 30aa          cpi  r26,10
00096a f039          breq __lcd_putchar1
00096b 94e8          clt
00096c 91e0 01aa 	LDS  R30,__lcd_maxx
00096e 91a0 01a8 	LDS  R26,__lcd_x
000970 17ae      	CP   R26,R30
000971 f058      	BRLO _0x2060004
                 	__lcd_putchar1:
000972 91e0 01a9 	LDS  R30,__lcd_y
000974 5fef      	SUBI R30,-LOW(1)
000975 93e0 01a9 	STS  __lcd_y,R30
000977 e0e0      	LDI  R30,LOW(0)
000978 93ea      	ST   -Y,R30
000979 91a0 01a9 	LDS  R26,__lcd_y
00097b dfbf      	RCALL _lcd_gotoxy
00097c f056      	brts __lcd_putchar0
                 _0x2060004:
00097d 91e0 01a8 	LDS  R30,__lcd_x
00097f 5fef      	SUBI R30,-LOW(1)
000980 93e0 01a8 	STS  __lcd_x,R30
000982 df7c          rcall __lcd_ready
000983 9ac0          sbi  __lcd_port,__lcd_rs ;RS=1
000984 81a8      	LD   R26,Y
000985 940e 091a 	CALL __lcd_write_data
                 __lcd_putchar0:
000987 91ff          pop  r31
000988 91ef          pop  r30
000989 940c 09f0 	JMP  _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00098b 93ba      	ST   -Y,R27
00098c 93aa      	ST   -Y,R26
00098d 931a      	ST   -Y,R17
                 _0x2060005:
00098e 81a9      	LDD  R26,Y+1
00098f 81ba      	LDD  R27,Y+1+1
000990 91ed      	LD   R30,X+
000991 83a9      	STD  Y+1,R26
000992 83ba      	STD  Y+1+1,R27
000993 2f1e      	MOV  R17,R30
000994 30e0      	CPI  R30,0
000995 f019      	BREQ _0x2060007
000996 2fa1      	MOV  R26,R17
000997 dfcc      	RCALL _lcd_putchar
000998 cff5      	RJMP _0x2060005
                 _0x2060007:
000999 c010      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
00099a 93ba      	ST   -Y,R27
00099b 93aa      	ST   -Y,R26
00099c 931a      	ST   -Y,R17
                 _0x2060008:
00099d 81e9      	LDD  R30,Y+1
00099e 81fa      	LDD  R31,Y+1+1
00099f 9631      	ADIW R30,1
0009a0 83e9      	STD  Y+1,R30
0009a1 83fa      	STD  Y+1+1,R31
0009a2 9731      	SBIW R30,1
0009a3 91e4      	LPM  R30,Z
0009a4 2f1e      	MOV  R17,R30
0009a5 30e0      	CPI  R30,0
0009a6 f019      	BREQ _0x206000A
0009a7 2fa1      	MOV  R26,R17
0009a8 dfbb      	RCALL _lcd_putchar
0009a9 cff3      	RJMP _0x2060008
                 _0x206000A:
                 _0x20C0002:
0009aa 8118      	LDD  R17,Y+0
0009ab 9623      	ADIW R28,3
0009ac 9508      	RET
                 ; .FEND
                 __long_delay_G103:
                 ; .FSTART __long_delay_G103
0009ad 27aa          clr   r26
0009ae 27bb          clr   r27
                 __long_delay0:
0009af 9711          sbiw  r26,1         ;2 cycles
0009b0 f7f1          brne  __long_delay0 ;2 cycles
0009b1 9508      	RET
                 ; .FEND
                 __lcd_init_write_G103:
                 ; .FSTART __lcd_init_write_G103
0009b2 93aa      	ST   -Y,R26
0009b3 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0009b4 b3a7          in    r26,__lcd_direction
0009b5 6fa7          ori   r26,0xf7                ;set as output
0009b6 bba7          out   __lcd_direction,r26
0009b7 b3b8          in    r27,__lcd_port
0009b8 70bf          andi  r27,0xf
0009b9 81a8          ld    r26,y
0009ba 940e 0910 	CALL __lcd_write_nibble_G103
0009bc 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
0009bd c032      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0009be 93aa      	ST   -Y,R26
0009bf 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
0009c0 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
0009c1 81e8      	LD   R30,Y
0009c2 93e0 01aa 	STS  __lcd_maxx,R30
0009c4 58e0      	SUBI R30,-LOW(128)
                +
0009c5 93e0 01a6+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
0009c7 81e8      	LD   R30,Y
0009c8 54e0      	SUBI R30,-LOW(192)
                +
0009c9 93e0 01a7+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
0009cb 940e 0ba8 	CALL SUBOPT_0x42
0009cd 940e 0ba8 	CALL SUBOPT_0x42
0009cf 940e 0ba8 	CALL SUBOPT_0x42
0009d1 dfdb      	RCALL __long_delay_G103
0009d2 e2a0      	LDI  R26,LOW(32)
0009d3 dfde      	RCALL __lcd_init_write_G103
0009d4 dfd8      	RCALL __long_delay_G103
0009d5 e2a8      	LDI  R26,LOW(40)
0009d6 940e 0bad 	CALL SUBOPT_0x43
0009d8 e0a4      	LDI  R26,LOW(4)
0009d9 940e 0bad 	CALL SUBOPT_0x43
0009db e8a5      	LDI  R26,LOW(133)
0009dc 940e 0bad 	CALL SUBOPT_0x43
0009de b3a7          in    r26,__lcd_direction
0009df 70af          andi  r26,0xf                 ;set as input
0009e0 bba7          out   __lcd_direction,r26
0009e1 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
0009e2 940e 0932 	CALL _lcd_read_byte0_G103
0009e4 30e5      	CPI  R30,LOW(0x5)
0009e5 f011      	BREQ _0x206000B
0009e6 e0e0      	LDI  R30,LOW(0)
0009e7 c008      	RJMP _0x20C0001
                 _0x206000B:
0009e8 940e 08ff 	CALL __lcd_ready
0009ea e0a6      	LDI  R26,LOW(6)
0009eb 940e 091a 	CALL __lcd_write_data
0009ed 940e 094f 	CALL _lcd_clear
0009ef e0e1      	LDI  R30,LOW(1)
                 _0x20C0001:
0009f0 9621      	ADIW R28,1
0009f1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _highM:
000160           	.BYTE 0x2
                 _lowK:
000162           	.BYTE 0x2
                 _highK:
000164           	.BYTE 0x2
                 _lowH:
000166           	.BYTE 0x2
                 _highH:
000168           	.BYTE 0x2
                 _lowB:
00016a           	.BYTE 0x2
                 _highB:
00016c           	.BYTE 0x2
                 _buff:
00016e           	.BYTE 0x21
                 _hasilwarna:
00018f           	.BYTE 0x1
                 _i:
000190           	.BYTE 0x2
                 _pos_servo1:
000192           	.BYTE 0x1
                 _pos_servo2:
000193           	.BYTE 0x1
                 _a:
000194           	.BYTE 0x1
                 
                 	.ESEG
                 _garis:
000000           	.BYTE 0x14
                 _back:
000014           	.BYTE 0x14
                 _tengah:
000028           	.BYTE 0x14
                 
                 	.DSEG
                 _sen:
000195           	.BYTE 0xA
                 _sensor:
00019f           	.BYTE 0x1
                 __seed_G102:
0001a0           	.BYTE 0x4
                 __base_y_G103:
0001a4           	.BYTE 0x4
                 __lcd_x:
0001a8           	.BYTE 0x1
                 __lcd_y:
0001a9           	.BYTE 0x1
                 __lcd_maxx:
0001aa           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0009f2 93e0 0192 	STS  _pos_servo1,R30
0009f4 efa4      	LDI  R26,LOW(500)
0009f5 e0b1      	LDI  R27,HIGH(500)
0009f6 940c 0c28 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0009f8 93e0 0193 	STS  _pos_servo2,R30
0009fa eca8      	LDI  R26,LOW(200)
0009fb e0b0      	LDI  R27,0
0009fc 940c 0c28 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2:
0009fe e0e1      	LDI  R30,LOW(1)
0009ff e0f0      	LDI  R31,HIGH(1)
000a00 93fa      	ST   -Y,R31
000a01 93ea      	ST   -Y,R30
000a02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000a03 eba9      	LDI  R26,LOW(185)
000a04 e0b0      	LDI  R27,0
000a05 940c 0169 	JMP  _scanX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000a07 e0e3      	LDI  R30,LOW(3)
000a08 e0f0      	LDI  R31,HIGH(3)
000a09 93fa      	ST   -Y,R31
000a0a 93ea      	ST   -Y,R30
000a0b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:60 WORDS
                 SUBOPT_0x5:
000a0c e0b0      	LDI  R27,0
000a0d 940e 049f 	CALL _scan0
000a0f eaaa      	LDI  R26,LOW(170)
000a10 e0b0      	LDI  R27,0
000a11 940e 04bc 	CALL _scan0rem
000a13 e6a4      	LDI  R26,LOW(100)
000a14 e0b0      	LDI  R27,0
000a15 940e 0181 	CALL _rem
000a17 eae0      	LDI  R30,LOW(160)
000a18 e0f0      	LDI  R31,HIGH(160)
000a19 93fa      	ST   -Y,R31
000a1a 93ea      	ST   -Y,R30
000a1b eaa0      	LDI  R26,LOW(160)
000a1c e0b0      	LDI  R27,0
000a1d 940e 02fc 	CALL _scanmundur
000a1f e6a4      	LDI  R26,LOW(100)
000a20 e0b0      	LDI  R27,0
000a21 940c 0181 	JMP  _rem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x6:
000a23 eaea      	LDI  R30,LOW(170)
000a24 e0f0      	LDI  R31,HIGH(170)
000a25 93fa      	ST   -Y,R31
000a26 93ea      	ST   -Y,R30
000a27 eaaa      	LDI  R26,LOW(170)
000a28 e0b0      	LDI  R27,0
000a29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000a2a eca8      	LDI  R26,LOW(200)
000a2b e0b0      	LDI  R27,0
000a2c 940c 04c8 	JMP  _scan7ki2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x8:
000a2e e6a4      	LDI  R26,LOW(100)
000a2f e0b0      	LDI  R27,0
000a30 940c 0181 	JMP  _rem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000a32 ebee      	LDI  R30,LOW(190)
000a33 e0f0      	LDI  R31,HIGH(190)
000a34 93fa      	ST   -Y,R31
000a35 93ea      	ST   -Y,R30
000a36 ebae      	LDI  R26,LOW(190)
000a37 e0b0      	LDI  R27,0
000a38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xA:
000a39 eae0      	LDI  R30,LOW(160)
000a3a 93ea      	ST   -Y,R30
000a3b eaa0      	LDI  R26,LOW(160)
000a3c 940e 0218 	CALL _mundur
000a3e e6a4      	LDI  R26,LOW(100)
000a3f e0b0      	LDI  R27,0
000a40 940c 0c28 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
000a42 eae0      	LDI  R30,LOW(160)
000a43 e0f0      	LDI  R31,HIGH(160)
000a44 93fa      	ST   -Y,R31
000a45 93ea      	ST   -Y,R30
000a46 eaa0      	LDI  R26,LOW(160)
000a47 e0b0      	LDI  R27,0
000a48 940c 02f3 	JMP  _belka
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000a4a eae0      	LDI  R30,LOW(160)
000a4b e0f0      	LDI  R31,HIGH(160)
000a4c 93fa      	ST   -Y,R31
000a4d 93ea      	ST   -Y,R30
000a4e eaa0      	LDI  R26,LOW(160)
000a4f e0b0      	LDI  R27,0
000a50 940c 02d9 	JMP  _belka2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xD:
000a52 93ba      	ST   -Y,R27
000a53 93aa      	ST   -Y,R26
000a54 940c 01cf 	JMP  _cek_sensor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
000a56 81ea      	LDD  R30,Y+2
000a57 81fb      	LDD  R31,Y+2+1
000a58 164e      	CP   R4,R30
000a59 065f      	CPC  R5,R31
000a5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000a5b 91e0 019f 	LDS  R30,_sensor
000a5d 71ec      	ANDI R30,LOW(0x1C)
000a5e 31ec      	CPI  R30,LOW(0x1C)
000a5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
000a60 940e 01cf 	CALL _cek_sensor
000a62 81a8      	LD   R26,Y
000a63 81b9      	LDD  R27,Y+1
000a64 940c 0368 	JMP  _scan
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x11:
000a66 940e 01cf 	CALL _cek_sensor
000a68 98c3      	CBI  0x18,3
000a69 81a8      	LD   R26,Y
000a6a 81b9      	LDD  R27,Y+1
000a6b 940c 0368 	JMP  _scan
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
000a6d 01f2      	MOVW R30,R4
000a6e 9631      	ADIW R30,1
000a6f 012f      	MOVW R4,R30
000a70 9731      	SBIW R30,1
000a71 9ac3      	SBI  0x18,3
000a72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
000a73 81a8      	LD   R26,Y
000a74 81b9      	LDD  R27,Y+1
000a75 940c 0c28 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
000a77 e0e0      	LDI  R30,LOW(0)
000a78 93e0 0190 	STS  _i,R30
000a7a 93e0 0191 	STS  _i+1,R30
000a7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
000a7d 91a0 0190 	LDS  R26,_i
000a7f 91b0 0191 	LDS  R27,_i+1
000a81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x16:
000a82 91a0 0190 	LDS  R26,_i
000a84 940e 010f 	CALL _read_adc
000a86 2e0e      	MOV  R0,R30
000a87 91e0 0190 	LDS  R30,_i
000a89 91f0 0191 	LDS  R31,_i+1
000a8b e2a8      	LDI  R26,LOW(_tengah)
000a8c e0b0      	LDI  R27,HIGH(_tengah)
000a8d 0fee      	LSL  R30
000a8e 1fff      	ROL  R31
000a8f 0fae      	ADD  R26,R30
000a90 1fbf      	ADC  R27,R31
000a91 940e 0bff 	CALL __EEPROMRDW
000a93 2da0      	MOV  R26,R0
000a94 e0b0      	LDI  R27,0
000a95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000a96 91e0 0190 	LDS  R30,_i
000a98 91f0 0191 	LDS  R31,_i+1
000a9a 56eb      	SUBI R30,LOW(-_sen)
000a9b 4ffe      	SBCI R31,HIGH(-_sen)
000a9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x18:
000a9d e9a0      	LDI  R26,LOW(_i)
000a9e e0b1      	LDI  R27,HIGH(_i)
000a9f 91ed      	LD   R30,X+
000aa0 91fd      	LD   R31,X+
000aa1 9631      	ADIW R30,1
000aa2 93fe      	ST   -X,R31
000aa3 93ee      	ST   -X,R30
000aa4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x19:
000aa5 e0e0      	LDI  R30,LOW(0)
000aa6 93ea      	ST   -Y,R30
000aa7 e0a0      	LDI  R26,LOW(0)
000aa8 940c 093b 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1A:
000aaa 940e 099a 	CALL _lcd_putsf
000aac e0e0      	LDI  R30,LOW(0)
000aad 93ea      	ST   -Y,R30
000aae e0a1      	LDI  R26,LOW(1)
000aaf 940e 093b 	CALL _lcd_gotoxy
000ab1 e6ee      	LDI  R30,LOW(_buff)
000ab2 e0f1      	LDI  R31,HIGH(_buff)
000ab3 93fa      	ST   -Y,R31
000ab4 93ea      	ST   -Y,R30
000ab5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1B:
000ab6 27ff      	CLR  R31
000ab7 2766      	CLR  R22
000ab8 2777      	CLR  R23
000ab9 940e 0bfa 	CALL __PUTPARD1
000abb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C:
000abc e6ae      	LDI  R26,LOW(_buff)
000abd e0b1      	LDI  R27,HIGH(_buff)
000abe 940c 098b 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
000ac0 93ba      	ST   -Y,R27
000ac1 93aa      	ST   -Y,R26
000ac2 cfb4      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
000ac3 e6a4      	LDI  R26,LOW(100)
000ac4 e0b0      	LDI  R27,0
000ac5 940c 0c28 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1F:
000ac7 93aa      	ST   -Y,R26
000ac8 81e8      	LD   R30,Y
000ac9 e0f0      	LDI  R31,0
000aca bdf9      	OUT  0x28+1,R31
000acb bde8      	OUT  0x28,R30
000acc 81e9      	LDD  R30,Y+1
000acd e0f0      	LDI  R31,0
000ace bdfb      	OUT  0x2A+1,R31
000acf bdea      	OUT  0x2A,R30
000ad0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x20:
000ad1 91e0 0190 	LDS  R30,_i
000ad3 91f0 0191 	LDS  R31,_i+1
000ad5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000ad6 e0a0      	LDI  R26,LOW(_garis)
000ad7 e0b0      	LDI  R27,HIGH(_garis)
000ad8 0fee      	LSL  R30
000ad9 1fff      	ROL  R31
000ada 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000adb 940e 0c0f 	CALL __EEPROMWRW
000add cfc7      	RJMP SUBOPT_0x19
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x23:
                +
000ade eaec     +LDI R30 , LOW ( 2 * _0x0 + ( 38 ) )
000adf e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 38 ) )
                 	__POINTW1FN _0x0,38
000ae0 93fa      	ST   -Y,R31
000ae1 93ea      	ST   -Y,R30
000ae2 dfee      	RCALL SUBOPT_0x20
000ae3 940e 0bc7 	CALL __CWD1
000ae5 940e 0bfa 	CALL __PUTPARD1
000ae7 cfe9      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x24:
000ae8 0fae      	ADD  R26,R30
000ae9 1fbf      	ADC  R27,R31
000aea 940e 0bff 	CALL __EEPROMRDW
000aec 940e 0bc7 	CALL __CWD1
000aee 940e 0bfa 	CALL __PUTPARD1
000af0 e088      	LDI  R24,8
000af1 940e 08a6 	CALL _sprintf
000af3 962c      	ADIW R28,12
000af4 cfc7      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000af5 dfdb      	RCALL SUBOPT_0x20
000af6 e1a4      	LDI  R26,LOW(_back)
000af7 e0b0      	LDI  R27,HIGH(_back)
000af8 0fee      	LSL  R30
000af9 1fff      	ROL  R31
000afa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
000afb dfd5      	RCALL SUBOPT_0x20
000afc e2a8      	LDI  R26,LOW(_tengah)
000afd e0b0      	LDI  R27,HIGH(_tengah)
000afe 0fee      	LSL  R30
000aff 1fff      	ROL  R31
000b00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
000b01 91e0 019f 	LDS  R30,_sensor
000b03 70e1      	ANDI R30,LOW(0x1)
000b04 30e1      	CPI  R30,LOW(0x1)
000b05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x28:
000b06 940e 01cf 	CALL _cek_sensor
000b08 81ea      	LDD  R30,Y+2
000b09 93ea      	ST   -Y,R30
000b0a 81a9      	LDD  R26,Y+1
000b0b 940c 0226 	JMP  _kiri
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x29:
000b0d 91e0 019f 	LDS  R30,_sensor
000b0f 74e0      	ANDI R30,LOW(0x40)
000b10 34e0      	CPI  R30,LOW(0x40)
000b11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2A:
000b12 940e 01cf 	CALL _cek_sensor
000b14 81ea      	LDD  R30,Y+2
000b15 93ea      	ST   -Y,R30
000b16 81a9      	LDD  R26,Y+1
000b17 940c 021f 	JMP  _kanan
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B:
000b19 940e 01cf 	CALL _cek_sensor
000b1b 81ea      	LDD  R30,Y+2
000b1c 93ea      	ST   -Y,R30
000b1d 81a9      	LDD  R26,Y+1
000b1e 940c 0218 	JMP  _mundur
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C:
000b20 ebe4      	LDI  R30,LOW(180)
000b21 e0f0      	LDI  R31,HIGH(180)
000b22 93fa      	ST   -Y,R31
000b23 93ea      	ST   -Y,R30
000b24 eba4      	LDI  R26,LOW(180)
000b25 e0b0      	LDI  R27,0
000b26 940c 02c5 	JMP  _belki2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D:
000b28 eae0      	LDI  R30,LOW(160)
000b29 e0f0      	LDI  R31,HIGH(160)
000b2a 93fa      	ST   -Y,R31
000b2b 93ea      	ST   -Y,R30
000b2c eaa0      	LDI  R26,LOW(160)
000b2d e0b0      	LDI  R27,0
000b2e 940c 02bc 	JMP  _belki
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2E:
000b30 93ea      	ST   -Y,R30
000b31 81a9      	LDD  R26,Y+1
000b32 940e 0211 	CALL _maju
000b34 9468      	SET
000b35 f820      	BLD  R2,0
000b36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
000b37 81e8      	LD   R30,Y
000b38 54e6      	SUBI R30,LOW(70)
000b39 cff6      	RJMP SUBOPT_0x2E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
000b3a 81e8      	LD   R30,Y
000b3b 52e8      	SUBI R30,LOW(40)
000b3c cff3      	RJMP SUBOPT_0x2E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31:
000b3d 81e8      	LD   R30,Y
000b3e 93ea      	ST   -Y,R30
000b3f 81a9      	LDD  R26,Y+1
000b40 50aa      	SUBI R26,LOW(10)
000b41 940e 0211 	CALL _maju
000b43 94e8      	CLT
000b44 f820      	BLD  R2,0
000b45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
000b46 81e8      	LD   R30,Y
000b47 93ea      	ST   -Y,R30
000b48 81a9      	LDD  R26,Y+1
000b49 51a4      	SUBI R26,LOW(20)
000b4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x33:
000b4b 940e 0211 	CALL _maju
000b4d 94e8      	CLT
000b4e f820      	BLD  R2,0
000b4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x34:
000b50 81e8      	LD   R30,Y
000b51 93ea      	ST   -Y,R30
000b52 81a9      	LDD  R26,Y+1
000b53 52a8      	SUBI R26,LOW(40)
000b54 cff6      	RJMP SUBOPT_0x33
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x35:
000b55 81e8      	LD   R30,Y
000b56 93ea      	ST   -Y,R30
000b57 81a9      	LDD  R26,Y+1
000b58 54a6      	SUBI R26,LOW(70)
000b59 cff1      	RJMP SUBOPT_0x33
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36:
000b5a 81e8      	LD   R30,Y
000b5b 93ea      	ST   -Y,R30
000b5c 81a9      	LDD  R26,Y+1
000b5d 5fad      	SUBI R26,-LOW(3)
000b5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
000b5f 91e0 019f 	LDS  R30,_sensor
000b61 72e0      	ANDI R30,LOW(0x20)
000b62 32e0      	CPI  R30,LOW(0x20)
000b63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38:
000b64 91e0 019f 	LDS  R30,_sensor
000b66 77ef      	ANDI R30,0x7F
000b67 30e0      	CPI  R30,0
000b68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
000b69 940e 01cf 	CALL _cek_sensor
000b6b 81a8      	LD   R26,Y
000b6c 81b9      	LDD  R27,Y+1
000b6d 940c 0404 	JMP  _scan2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
000b6f 940e 0bfa 	CALL __PUTPARD1
000b71 e084      	LDI  R24,4
000b72 940e 08a6 	CALL _sprintf
000b74 9628      	ADIW R28,8
000b75 cf46      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x3B:
000b76 eba4      	LDI  R26,LOW(180)
000b77 e0b0      	LDI  R27,0
000b78 940e 0169 	CALL _scanX
000b7a eea8      	LDI  R26,LOW(1000)
000b7b e0b3      	LDI  R27,HIGH(1000)
000b7c 940e 0181 	CALL _rem
000b7e cea4      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C:
000b7f 940e 02bc 	CALL _belki
000b81 eea8      	LDI  R26,LOW(1000)
000b82 e0b3      	LDI  R27,HIGH(1000)
000b83 940c 0181 	JMP  _rem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3D:
000b85 940e 02f3 	CALL _belka
000b87 eea8      	LDI  R26,LOW(1000)
000b88 e0b3      	LDI  R27,HIGH(1000)
000b89 940c 0181 	JMP  _rem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3E:
000b8b 932a      	ST   -Y,R18
000b8c 85ad      	LDD  R26,Y+13
000b8d 85be      	LDD  R27,Y+13+1
000b8e 85ef      	LDD  R30,Y+15
000b8f 89f8      	LDD  R31,Y+15+1
000b90 9509      	ICALL
000b91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3F:
000b92 89e8      	LDD  R30,Y+16
000b93 89f9      	LDD  R31,Y+16+1
000b94 9734      	SBIW R30,4
000b95 8be8      	STD  Y+16,R30
000b96 8bf9      	STD  Y+16+1,R31
000b97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40:
000b98 85ad      	LDD  R26,Y+13
000b99 85be      	LDD  R27,Y+13+1
000b9a 85ef      	LDD  R30,Y+15
000b9b 89f8      	LDD  R31,Y+15+1
000b9c 9509      	ICALL
000b9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x41:
000b9e 89a8      	LDD  R26,Y+16
000b9f 89b9      	LDD  R27,Y+16+1
000ba0 9614      	ADIW R26,4
000ba1 91ed      	LD   R30,X+
000ba2 91fd      	LD   R31,X+
000ba3 83ee      	STD  Y+6,R30
000ba4 83ff      	STD  Y+6+1,R31
000ba5 81ae      	LDD  R26,Y+6
000ba6 81bf      	LDD  R27,Y+6+1
000ba7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x42:
000ba8 940e 09ad 	CALL __long_delay_G103
000baa e3a0      	LDI  R26,LOW(48)
000bab 940c 09b2 	JMP  __lcd_init_write_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
000bad 940e 091a 	CALL __lcd_write_data
000baf 940c 09ad 	JMP  __long_delay_G103
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000bb1 935a      	ST   -Y,R21
                 __SAVELOCR5:
000bb2 934a      	ST   -Y,R20
                 __SAVELOCR4:
000bb3 933a      	ST   -Y,R19
                 __SAVELOCR3:
000bb4 932a      	ST   -Y,R18
                 __SAVELOCR2:
000bb5 931a      	ST   -Y,R17
000bb6 930a      	ST   -Y,R16
000bb7 9508      	RET
                 
                 __LOADLOCR6:
000bb8 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000bb9 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000bba 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000bbb 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000bbc 8119      	LDD  R17,Y+1
000bbd 8108      	LD   R16,Y
000bbe 9508      	RET
                 
                 __ADDW2R15:
000bbf 2400      	CLR  R0
000bc0 0daf      	ADD  R26,R15
000bc1 1db0      	ADC  R27,R0
000bc2 9508      	RET
                 
                 __ANEGW1:
000bc3 95f1      	NEG  R31
000bc4 95e1      	NEG  R30
000bc5 40f0      	SBCI R31,0
000bc6 9508      	RET
                 
                 __CWD1:
000bc7 2f6f      	MOV  R22,R31
000bc8 0f66      	ADD  R22,R22
000bc9 0b66      	SBC  R22,R22
000bca 2f76      	MOV  R23,R22
000bcb 9508      	RET
                 
                 __DIVW21U:
000bcc 2400      	CLR  R0
000bcd 2411      	CLR  R1
000bce e190      	LDI  R25,16
                 __DIVW21U1:
000bcf 0faa      	LSL  R26
000bd0 1fbb      	ROL  R27
000bd1 1c00      	ROL  R0
000bd2 1c11      	ROL  R1
000bd3 1a0e      	SUB  R0,R30
000bd4 0a1f      	SBC  R1,R31
000bd5 f418      	BRCC __DIVW21U2
000bd6 0e0e      	ADD  R0,R30
000bd7 1e1f      	ADC  R1,R31
000bd8 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000bd9 60a1      	SBR  R26,1
                 __DIVW21U3:
000bda 959a      	DEC  R25
000bdb f799      	BRNE __DIVW21U1
000bdc 01fd      	MOVW R30,R26
000bdd 01d0      	MOVW R26,R0
000bde 9508      	RET
                 
                 __DIVW21:
000bdf d004      	RCALL __CHKSIGNW
000be0 dfeb      	RCALL __DIVW21U
000be1 f40e      	BRTC __DIVW211
000be2 dfe0      	RCALL __ANEGW1
                 __DIVW211:
000be3 9508      	RET
                 
                 __CHKSIGNW:
000be4 94e8      	CLT
000be5 fff7      	SBRS R31,7
000be6 c002      	RJMP __CHKSW1
000be7 dfdb      	RCALL __ANEGW1
000be8 9468      	SET
                 __CHKSW1:
000be9 ffb7      	SBRS R27,7
000bea c006      	RJMP __CHKSW2
000beb 95b1      	NEG  R27
000bec 95a1      	NEG  R26
000bed 40b0      	SBCI R27,0
000bee f800      	BLD  R0,0
000bef 9403      	INC  R0
000bf0 fa00      	BST  R0,0
                 __CHKSW2:
000bf1 9508      	RET
                 
                 __GETW1P:
000bf2 91ed      	LD   R30,X+
000bf3 91fc      	LD   R31,X
000bf4 9711      	SBIW R26,1
000bf5 9508      	RET
                 
                 __GETW1PF:
000bf6 9005      	LPM  R0,Z+
000bf7 91f4      	LPM  R31,Z
000bf8 2de0      	MOV  R30,R0
000bf9 9508      	RET
                 
                 __PUTPARD1:
000bfa 937a      	ST   -Y,R23
000bfb 936a      	ST   -Y,R22
000bfc 93fa      	ST   -Y,R31
000bfd 93ea      	ST   -Y,R30
000bfe 9508      	RET
                 
                 __EEPROMRDW:
000bff 9611      	ADIW R26,1
000c00 d002      	RCALL __EEPROMRDB
000c01 2ffe      	MOV  R31,R30
000c02 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000c03 99e1      	SBIC EECR,EEWE
000c04 cffe      	RJMP __EEPROMRDB
000c05 93ff      	PUSH R31
000c06 b7ff      	IN   R31,SREG
000c07 94f8      	CLI
000c08 bbae      	OUT  EEARL,R26
000c09 bbbf      	OUT  EEARH,R27
000c0a 9ae0      	SBI  EECR,EERE
000c0b b3ed      	IN   R30,EEDR
000c0c bfff      	OUT  SREG,R31
000c0d 91ff      	POP  R31
000c0e 9508      	RET
                 
                 __EEPROMWRW:
000c0f d007      	RCALL __EEPROMWRB
000c10 9611      	ADIW R26,1
000c11 93ef      	PUSH R30
000c12 2fef      	MOV  R30,R31
000c13 d003      	RCALL __EEPROMWRB
000c14 91ef      	POP  R30
000c15 9711      	SBIW R26,1
000c16 9508      	RET
                 
                 __EEPROMWRB:
000c17 9be1      	SBIS EECR,EEWE
000c18 c002      	RJMP __EEPROMWRB1
000c19 95a8      	WDR
000c1a cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000c1b b79f      	IN   R25,SREG
000c1c 94f8      	CLI
000c1d bbae      	OUT  EEARL,R26
000c1e bbbf      	OUT  EEARH,R27
000c1f 9ae0      	SBI  EECR,EERE
000c20 b38d      	IN   R24,EEDR
000c21 17e8      	CP   R30,R24
000c22 f019      	BREQ __EEPROMWRB0
000c23 bbed      	OUT  EEDR,R30
000c24 9ae2      	SBI  EECR,EEMWE
000c25 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000c26 bf9f      	OUT  SREG,R25
000c27 9508      	RET
                 
                 _delay_ms:
000c28 9610      	adiw r26,0
000c29 f039      	breq __delay_ms1
                 __delay_ms0:
000c2a 95a8      	wdr
                +
000c2b ec8d     +LDI R24 , LOW ( 0xACD )
000c2c e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
000c2d 9701     +SBIW R24 , 1
000c2e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
000c2f 9711      	sbiw r26,1
000c30 f7c9      	brne __delay_ms0
                 __delay_ms1:
000c31 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  26 r1 :   5 r2 :   4 r3 :   0 r4 :   6 r5 :   2 r6 :   7 r7 :   2 
r8 :   1 r9 :   0 r10:   9 r11:   9 r12:   1 r13:   1 r14:   0 r15:   4 
r16:  34 r17:  27 r18:  29 r19:   8 r20:   9 r21:  17 r22:  18 r23:   4 
r24:  15 r25:   7 r26: 406 r27: 140 r28:  20 r29:   1 r30: 548 r31: 223 
x  :  37 y  : 299 z  :  17 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  10 add   :  19 
adiw  :  38 and   :   0 andi  :  18 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  40 
brge  :  11 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   1 brmi  :   1 brne  :  88 brpl  :   1 brsh  :   6 brtc  :   1 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 364 
cbi   :  34 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  21 cls   :   0 clt   :   4 clv   :   0 clz   :   0 com   :   0 
cp    :  20 cpc   :  64 cpi   :  97 cpse  :   0 dec   :   3 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :  15 inc   :   1 jmp   :  53 ld    :  65 ldd   : 103 ldi   : 375 
lds   :  65 lpm   :  16 lsl   :  12 lsr   :   0 mov   :  25 movw  :  33 
mul   :   1 muls  :   3 mulsu :   0 neg   :   4 nop   :   0 or    :   2 
ori   :   9 out   :  63 pop   :   9 push  :   9 rcall :  87 ret   :  72 
reti  :   2 rjmp  : 200 rol   :   8 ror   :   0 sbc   :   3 sbci  :   4 
sbi   :  35 sbic  :   6 sbis  :   2 sbiw  :  28 sbr   :   1 sbrc  :   3 
sbrs  :  13 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 136 std   :  36 sts   :  23 sub   :   2 subi  :  36 swap  :   2 
tst   :   4 wdr   :   2 
Instructions used: 70 out of 116 (60.3%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001864   5882    362   6244   16384  38.1%
[.dseg] 0x000060 0x0001ab      0     75     75    1024   7.3%
[.eseg] 0x000000 0x00003c      0     60     60     512  11.7%

Assembly complete, 0 errors, 23 warnings
